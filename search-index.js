crystal_doc_search_index_callback({"repository_name":"github.com/gitlato/mochi","body":"# Mochi\n[![Build Status](https://travis-ci.org/gitlato/mochi.svg?branch=master)](https://travis-ci.org/sundaecr/mochi)\n\n![Image of Mochi](https://image.shutterstock.com/image-vector/mochi-character-design-wallpaper-free-260nw-1572610879.jpg)\n\nMochi is a shard inspired by devise for ruby. Mochi handles everything authentication. Currently amber is the only supported framework with both granite and jennifer orms being supported. I am open to other frameworks being supported, such as lucky, but there is a lot to do before that. If you want this to work with lucky asap, you'll have to open a pull request right now.\n\nThe Mochi CLI makes installation easy. Please give a thanks to the amber core team for their CLI. I have pulled it out of amber to use as a base. \n\n## Documentation\n### API Docs\n[API Documentation](https://gitlato.github.io/mochi/)\n\n### Gitbook\n[Gitbook](https://awcrotwell.gitbook.io/mochi/)\n\n## Mochi Modules\n> **Note:** Only the class 'User' is supported. This probably will not change due to crystal being staticly typed. I am open to changing this if i find a solid implementation.\n\nCurrently, Mochi has 7 modules:  \n\n1. **[Authenticable](https://awcrotwell.gitbook.io/mochi/guides/authenticable)**\n  - Basic authentication. Sign up, sign in, sign out.  \n  - Mandatory columns:  \n    - `email`: String - User's sign up email\n    - `password_digest`: String? - User's password stored as a bcrypt digest\n\n  > **Note:** Mochi also puts 'password' and 'new_password' in as attributes, however we don't want these saved in plain text so do NOT add them as columns.\n\n2. **[Confirmable](https://awcrotwell.gitbook.io/mochi/guides/confirmable)**  \n  - Users are required to confirm their email prior to activation. Mochi generates a UUID for each user and sends an email. This UUID is for user activation and verification\n  - Mandatory columns:  \n    - `confirmation_token`: String - Token used for email activation & verification\n    - `confirmed`: Bool - True if user account is activated\n    - `confirmed_at`: Timestamp? - Time user confirmed account\n    - `confirmation_sent_at`: Timestamp? - Time confirmation email sent\n    - `unconfirmed_email`: String? - An email address copied from the email attr after confirmation.\n  \n3. **[Omniauthable](https://awcrotwell.gitbook.io/mochi/guides/omniauthable)**  \n  - Users can sign up with google, facebook, github, twitter or vk. (Google is still WIP)\n  - Mandatory columns:\n    - `uid`: String? - Identifaction number used for sign-in verification (These user's do not have a `password_digest` or `email`)\n\n4. **[Trackable](https://awcrotwell.gitbook.io/mochi/guides/trackable)**\n  - Tracks user's sign in count, ip addresses and sign in time\n  - Mandatory columns:\n    - `sign_in_count`: Integer - Total amount of times a user has successfully signed in\n    - `current_sign_in_ip`: String? - The most recent IP address used to sign in\n    - `last_sign_in_ip`: String? - The second most recent IP address used to sign in\n    - `current_sign_in_at`: Timestamp? - The time a user last signed in at\n    - `last_sign_in_at`: Timestamp? - The second most recent time a user signed in\n\n5. **[Recoverable](https://awcrotwell.gitbook.io/mochi/guides/recoverable)**\n  - Allows users to reset password via email link\n  - Mandatory columns:\n    - `reset_password_sent_at`: Timestamp? - Time password reset email was sent at\n    - `reset_password_token`: String? - UUID token for verification\n    - `password_reset_in_progress`: Bool - returns true when a password reset was initialized but not confirmed & completed.\n\n6. **[Lockable](https://awcrotwell.gitbook.io/mochi/guides/lockable)**\n  - User's have X number of times to log in before account is locked & email verification occurs\n  - Mandatory columns:\n    - `locked_at`: Timestamp? - Time account was locked at\n    - `unlock_token`: String? - UUID token for verification\n    - `failed_attempts`: Integer - Number of attempts currently failed since last sign in\n\n7. **[Invitable](https://awcrotwell.gitbook.io/mochi/guides/invitable)**\n  - User's can invite other users. Inviter inputs email, email sent out, invitee inputs password, account is confirmed if confirmable is active.\n  - Mandatory columns:\n    - `invitation_accepted_at`: Timestamp? - Time invitee accepted invite\n    - `invitation_created_at`: Timestamp? - Time inviter created invite\n    - `invitation_token`: String? - UUID verification token\n    - `invited_by`: Integer? - Inviter user id\n    - `invitation_sent_at`: Timestamp? - Time invite email was sent (same as `invitiation_created_at`)\n","program":{"html_id":"github.com/gitlato/mochi/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/gitlato/mochi","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi","path":"Mochi.html","kind":"module","full_name":"Mochi","name":"Mochi","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/configuration.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr"},{"filename":"mochi/models/lockable.cr","line_number":3,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr"},{"filename":"mochi.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi.cr"},{"filename":"mochi/version.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/version.cr"},{"filename":"mochi/models/omniauthable/configuration.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.2.1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"TODO: Write documentation for `Mochi`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code><a href=\"Mochi.html\">Mochi</a></code></p>","class_methods":[{"id":"configuration-class-method","html_id":"configuration-class-method","name":"configuration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi.cr#L7","def":{"name":"configuration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@configuration"}},{"id":"setup(&)-class-method","html_id":"setup(&amp;)-class-method","name":"setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi.cr#L11","def":{"name":"setup","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield @@configuration"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"mochi_granite(*modules)-macro","html_id":"mochi_granite(*modules)-macro","name":"mochi_granite","doc":null,"summary":null,"abstract":false,"args":[{"name":"modules","doc":null,"default_value":"","external_name":"modules","restriction":""}],"args_string":"(*modules)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi.cr#L15","def":{"name":"mochi_granite","args":[{"name":"modules","doc":null,"default_value":"","external_name":"modules","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% for i in modules %}\n      {% if i.id == (:authenticable) %}\n        include Mochi::Models::Authenticable::Validations::Granite\n        include Mochi::Models::Authenticable\n        with_validations\n      {% end %}\n\n      {% if i.id == (:confirmable) %}\n        include Mochi::Models::Confirmable\n        with_confirmation\n      {% end %}\n\n      {% if i.id == (:trackable) %}\n        include Mochi::Models::Trackable\n      {% end %}\n\n      {% if i.id == (:recoverable) %}\n        include Mochi::Models::Recoverable\n      {% end %}\n\n      {% if i.id == (:lockable) %}\n        include Mochi::Models::Lockable\n      {% end %}\n\n      {% if i.id == (:invitable) %}\n        include Mochi::Models::Invitable\n      {% end %}\n\n      {% if i.id == (:omniauthable) %}\n        #include Mochi::Omniauthable::Providers\n      {% end %}\n    {% end %}\n\n  \n"}},{"id":"mochi_jennifer(*modules)-macro","html_id":"mochi_jennifer(*modules)-macro","name":"mochi_jennifer","doc":null,"summary":null,"abstract":false,"args":[{"name":"modules","doc":null,"default_value":"","external_name":"modules","restriction":""}],"args_string":"(*modules)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi.cr#L50","def":{"name":"mochi_jennifer","args":[{"name":"modules","doc":null,"default_value":"","external_name":"modules","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% for i in modules %}\n      {% if i.id == (:authenticable) %}\n        include Mochi::Models::Authenticable::Validations::Jennifer\n        include Mochi::Models::Authenticable\n        jennifer_validations\n      {% end %}\n\n      {% if i.id == (:confirmable) %}\n        include Mochi::Models::Confirmable\n        with_confirmation\n      {% end %}\n\n      {% if i.id == (:trackable) %}\n        include Mochi::Models::Trackable\n      {% end %}\n\n      {% if i.id == (:recoverable) %}\n        include Mochi::Models::Recoverable\n      {% end %}\n\n      {% if i.id == (:lockable) %}\n        include Mochi::Models::Lockable\n      {% end %}\n\n      {% if i.id == (:invitable) %}\n        include Mochi::Models::Invitable\n      {% end %}\n\n      {% if i.id == (:omniauthable) %}\n        #include Mochi::Omniauthable::Providers\n      {% end %}\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI","path":"Mochi/CLI.html","kind":"module","full_name":"Mochi::CLI","name":"CLI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/cli/config.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/config.cr"},{"filename":"mochi/cli/generators/field.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr"},{"filename":"mochi/cli/generators/generator.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/generator.cr"},{"filename":"mochi/cli/generators/authenticable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr"},{"filename":"mochi/cli/generators/confirmable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr"},{"filename":"mochi/cli/generators/invitable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr"},{"filename":"mochi/cli/generators/lockable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr"},{"filename":"mochi/cli/generators/omniauth.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr"},{"filename":"mochi/cli/generators/recoverable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr"},{"filename":"mochi/cli/generators/trackable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr"},{"filename":"mochi/cli/generators.cr","line_number":9,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr"},{"filename":"mochi/cli/commands/generate.cr","line_number":3,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands.cr","line_number":6,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":null,"summary":null,"class_methods":[{"id":"color-class-method","html_id":"color-class-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L4","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@color"}},{"id":"color=(color)-class-method","html_id":"color=(color)-class-method","name":"color=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":""}],"args_string":"(color)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L4","def":{"name":"color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@color = color"}},{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/config.cr#L2","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.new"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Authenticable","path":"Mochi/CLI/Authenticable.html","kind":"class","full_name":"Mochi::CLI::Authenticable","name":"Authenticable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/authenticable.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/show.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/show.slang\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/edit.slang\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/edit.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr8(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/new.slang\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr10(io)\n____files << (::Teeplate::StringData.new(\"src/views/#{@name}/new.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr12(io)\n____files << (::Teeplate::StringData.new(\"src/views/layouts/+_session.slang\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr14(io)\n____files << (::Teeplate::StringData.new(\"src/views/layouts/+_session.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr16(io)\n____files << (::Teeplate::StringData.new(\"src/views/session/new.slang\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr18(io)\n____files << (::Teeplate::StringData.new(\"src/views/session/new.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr20(io)\n____files << (::Teeplate::StringData.new(\"src/pipes/authenticate.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr22(io)\n____files << (::Teeplate::StringData.new(\"src/models/#{@name}.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr24(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/session_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr26(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/#{@name}_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr28(io)\n____files << (::Teeplate::StringData.new(\"spec/models/#{@name}_spec.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr30(io)\n____files << (::Teeplate::StringData.new(\"spec/models/spec_helper.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr32(io)\n____files << (::Teeplate::StringData.new(\"spec/controllers/spec_helper.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr34(io)\n____files << (::Teeplate::StringData.new(\"db/+seeds.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr36(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_create_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr38(io)\n____files << (::Teeplate::StringData.new(\"config/initializers/mochi.cr\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/{{name}}/show.ecr.ecr\", \"____io\")"}},{"id":"__ecr10(____io)-instance-method","html_id":"__ecr10(____io)-instance-method","name":"__ecr10","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr10","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/{{name}}/new.ecr.ecr\", \"____io\")"}},{"id":"__ecr12(____io)-instance-method","html_id":"__ecr12(____io)-instance-method","name":"__ecr12","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr12","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/layouts/+_session.slang.ecr\", \"____io\")"}},{"id":"__ecr14(____io)-instance-method","html_id":"__ecr14(____io)-instance-method","name":"__ecr14","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr14","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/layouts/+_session.ecr.ecr\", \"____io\")"}},{"id":"__ecr16(____io)-instance-method","html_id":"__ecr16(____io)-instance-method","name":"__ecr16","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr16","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/session/new.slang.ecr\", \"____io\")"}},{"id":"__ecr18(____io)-instance-method","html_id":"__ecr18(____io)-instance-method","name":"__ecr18","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr18","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/session/new.ecr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/{{name}}/show.slang.ecr\", \"____io\")"}},{"id":"__ecr20(____io)-instance-method","html_id":"__ecr20(____io)-instance-method","name":"__ecr20","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr20","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/pipes/authenticate.cr.ecr\", \"____io\")"}},{"id":"__ecr22(____io)-instance-method","html_id":"__ecr22(____io)-instance-method","name":"__ecr22","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr22","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/models/{{name}}.cr.ecr\", \"____io\")"}},{"id":"__ecr24(____io)-instance-method","html_id":"__ecr24(____io)-instance-method","name":"__ecr24","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr24","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/controllers/session_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr26(____io)-instance-method","html_id":"__ecr26(____io)-instance-method","name":"__ecr26","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr26","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/controllers/{{name}}_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr28(____io)-instance-method","html_id":"__ecr28(____io)-instance-method","name":"__ecr28","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr28","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/spec/models/{{name}}_spec.cr.ecr\", \"____io\")"}},{"id":"__ecr30(____io)-instance-method","html_id":"__ecr30(____io)-instance-method","name":"__ecr30","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr30","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/spec/models/spec_helper.cr.ecr\", \"____io\")"}},{"id":"__ecr32(____io)-instance-method","html_id":"__ecr32(____io)-instance-method","name":"__ecr32","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr32","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/spec/controllers/spec_helper.cr.ecr\", \"____io\")"}},{"id":"__ecr34(____io)-instance-method","html_id":"__ecr34(____io)-instance-method","name":"__ecr34","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr34","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/db/+seeds.cr.ecr\", \"____io\")"}},{"id":"__ecr36(____io)-instance-method","html_id":"__ecr36(____io)-instance-method","name":"__ecr36","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr36","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/db/migrations/{{timestamp}}_create_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"__ecr38(____io)-instance-method","html_id":"__ecr38(____io)-instance-method","name":"__ecr38","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr38","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/config/initializers/mochi.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/{{name}}/edit.slang.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/{{name}}/edit.ecr.ecr\", \"____io\")"}},{"id":"__ecr8(____io)-instance-method","html_id":"__ecr8(____io)-instance-method","name":"__ecr8","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L7","def":{"name":"__ecr8","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/authenticable/src/views/{{name}}/new.slang.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/authenticable.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_plugs\ninherit_plug(:web, :auth)\nadd_routes\nadd_dependencies\ninject_application_controller_methods\n"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Config","path":"Mochi/CLI/Config.html","kind":"class","full_name":"Mochi::CLI::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/config.cr","line_number":6,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/config.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_NAME","name":"DEFAULT_NAME","value":"\"[process_name]\"","doc":null,"summary":null},{"id":"SHARD_YML","name":"SHARD_YML","value":"\"shard.yml\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"get_name-class-method","html_id":"get_name-class-method","name":"get_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/config.cr#L27","def":{"name":"get_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((File.exists?(SHARD_YML)) && (yaml = YAML.parse(File.read(SHARD_YML)))) && (name = yaml[\"name\"]?)\n  name.as_s\nelse\n  DEFAULT_NAME\nend"}}],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/config.cr#L16","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"database:String-instance-method","html_id":"database:String-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database"}},{"id":"database=(_database:String)-instance-method","html_id":"database=(_database:String)-instance-method","name":"database=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_database","doc":null,"default_value":"","external_name":"_database","restriction":"String"}],"args_string":"(_database : String)","source_link":null,"def":{"name":"database=","args":[{"name":"_database","doc":null,"default_value":"","external_name":"_database","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database = _database"}},{"id":"language:String-instance-method","html_id":"language:String-instance-method","name":"language","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"language","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@language"}},{"id":"language=(_language:String)-instance-method","html_id":"language=(_language:String)-instance-method","name":"language=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_language","doc":null,"default_value":"","external_name":"_language","restriction":"String"}],"args_string":"(_language : String)","source_link":null,"def":{"name":"language=","args":[{"name":"_language","doc":null,"default_value":"","external_name":"_language","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@language = _language"}},{"id":"model:String-instance-method","html_id":"model:String-instance-method","name":"model","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"model","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@model"}},{"id":"model=(_model:String)-instance-method","html_id":"model=(_model:String)-instance-method","name":"model=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_model","doc":null,"default_value":"","external_name":"_model","restriction":"String"}],"args_string":"(_model : String)","source_link":null,"def":{"name":"model=","args":[{"name":"_model","doc":null,"default_value":"","external_name":"_model","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@model = _model"}},{"id":"recipe:String?-instance-method","html_id":"recipe:String?-instance-method","name":"recipe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"recipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe"}},{"id":"recipe=(_recipe:String?)-instance-method","html_id":"recipe=(_recipe:String?)-instance-method","name":"recipe=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_recipe","doc":null,"default_value":"","external_name":"_recipe","restriction":"String | Nil"}],"args_string":"(_recipe : String?)","source_link":null,"def":{"name":"recipe=","args":[{"name":"_recipe","doc":null,"default_value":"","external_name":"_recipe","restriction":"String | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe = _recipe"}},{"id":"recipe_source:String?-instance-method","html_id":"recipe_source:String?-instance-method","name":"recipe_source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"recipe_source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe_source"}},{"id":"recipe_source=(_recipe_source:String?)-instance-method","html_id":"recipe_source=(_recipe_source:String?)-instance-method","name":"recipe_source=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_recipe_source","doc":null,"default_value":"","external_name":"_recipe_source","restriction":"String | Nil"}],"args_string":"(_recipe_source : String?)","source_link":null,"def":{"name":"recipe_source=","args":[{"name":"_recipe_source","doc":null,"default_value":"","external_name":"_recipe_source","restriction":"String | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipe_source = _recipe_source"}},{"id":"to_yaml(__temp_113:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_113:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_113","doc":null,"default_value":"","external_name":"__temp_113","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_113 : YAML::Nodes::Builder)","source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_113","doc":null,"default_value":"","external_name":"__temp_113","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_113.mapping(reference: self) do\n  _database = @database\n  if _database.nil?\n  else\n    \"database\".to_yaml(__temp_113)\n    _database.to_yaml(__temp_113)\n  end\n  _language = @language\n  if _language.nil?\n  else\n    \"language\".to_yaml(__temp_113)\n    _language.to_yaml(__temp_113)\n  end\n  _model = @model\n  if _model.nil?\n  else\n    \"model\".to_yaml(__temp_113)\n    _model.to_yaml(__temp_113)\n  end\n  _recipe = @recipe\n  if _recipe.nil?\n  else\n    \"recipe\".to_yaml(__temp_113)\n    _recipe.to_yaml(__temp_113)\n  end\n  _recipe_source = @recipe_source\n  if _recipe_source.nil?\n  else\n    \"recipe_source\".to_yaml(__temp_113)\n    _recipe_source.to_yaml(__temp_113)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Confirmable","path":"Mochi/CLI/Confirmable.html","kind":"class","full_name":"Mochi::CLI::Confirmable","name":"Confirmable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/confirmable.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/confirmation_mailer.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/confirmation_mailer.text.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/registration_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_confirmable_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/confirmable/src/mailers/confirmation_mailer.cr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/confirmable/src/mailers/confirmation_mailer.text.ecr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/confirmable/src/controllers/registration_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/confirmable/db/migrations/{{timestamp}}_add_confirmable_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/confirmable.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Field","path":"Mochi/CLI/Field.html","kind":"class","full_name":"Mochi::CLI::Field","name":"Field","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/field.cr","line_number":2,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TYPE_MAPPING","name":"TYPE_MAPPING","value":"{common: {string: [\"string\", \"String\", \"VARCHAR\"], text: [\"text\", \"String\", \"TEXT\"], int: [\"integer\", \"Int32\", \"INT\"], int32: [\"integer\", \"Int32\", \"INT\"], integer: [\"integer\", \"Int32\", \"INT\"], int64: [\"bigint\", \"Int64\", \"BIGINT\"], bigint: [\"bigint\", \"Int64\", \"BIGINT\"], float: [\"float\", \"Float64\", \"FLOAT\"], float64: [\"real\", \"Float64\", \"FLOAT\"], real: [\"real\", \"Float64\", \"REAL\"], bool: [\"boolean\", \"Bool\", \"BOOL\"], boolean: [\"boolean\", \"Bool\", \"BOOL\"], date: [\"date\", \"Time\", \"DATE\"], time: [\"time\", \"Time\", \"TIMESTAMP\"], timestamp: [\"time\", \"Time\", \"TIMESTAMP\"], password: [\"password\", \"String\", \"VARCHAR\"], ref: [\"reference\", \"Int64\", \"BIGINT\"], belongs_to: [\"reference\", \"Int64\", \"BIGINT\"], reference: [\"reference\", \"Int64\", \"BIGINT\"], references: [\"reference\", \"Int64\", \"BIGINT\"]}, mysql: {string: [\"string\", \"String\", \"VARCHAR(255)\"], float: [\"float\", \"Float32\", \"FLOAT\"], password: [\"password\", \"String\", \"VARCHAR(255)\"], time: [\"time\", \"Time\", \"TIMESTAMP NULL\"], timestamp: [\"time\", \"Time\", \"TIMESTAMP NULL\"]}, sqlite: {int: [\"bigint\", \"Int64\", \"INT\"], int32: [\"bigint\", \"Int64\", \"INT\"], integer: [\"bigint\", \"Int64\", \"INT\"], int64: [\"bigint\", \"Int64\", \"INT\"], bigint: [\"bigint\", \"Int64\", \"INT\"], bool: [\"boolean\", \"Int64\", \"BOOL\"], boolean: [\"boolean\", \"Int64\", \"BOOL\"], date: [\"date_as_var\", \"String\", \"DATE\"], time: [\"time_as_var\", \"String\", \"TIMESTAMP\"], timestamp: [\"time_as_var\", \"String\", \"TIMESTAMP\"]}}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(field,hidden=false,database=&quot;pg&quot;)-class-method","html_id":"new(field,hidden=false,database=&amp;quot;pg&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"hidden","doc":null,"default_value":"false","external_name":"hidden","restriction":""},{"name":"database","doc":null,"default_value":"\"pg\"","external_name":"database","restriction":""}],"args_string":"(field, hidden = <span class=\"n\">false</span>, database = <span class=\"s\">&quot;pg&quot;</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L54","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"hidden","doc":null,"default_value":"false","external_name":"hidden","restriction":""},{"name":"database","doc":null,"default_value":"\"pg\"","external_name":"database","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(field, hidden, database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L91","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Inflector.classify(@name)"}},{"id":"cr_type:String-instance-method","html_id":"cr_type:String-instance-method","name":"cr_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L49","def":{"name":"cr_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@cr_type"}},{"id":"cr_type=(cr_type:String)-instance-method","html_id":"cr_type=(cr_type:String)-instance-method","name":"cr_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"cr_type","doc":null,"default_value":"","external_name":"cr_type","restriction":"String"}],"args_string":"(cr_type : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L49","def":{"name":"cr_type=","args":[{"name":"cr_type","doc":null,"default_value":"","external_name":"cr_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cr_type = cr_type"}},{"id":"database:String-instance-method","html_id":"database:String-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L52","def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@database"}},{"id":"database=(database:String)-instance-method","html_id":"database=(database:String)-instance-method","name":"database=","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"}],"args_string":"(database : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L52","def":{"name":"database=","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database = database"}},{"id":"db_type:String-instance-method","html_id":"db_type:String-instance-method","name":"db_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L50","def":{"name":"db_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@db_type"}},{"id":"db_type=(db_type:String)-instance-method","html_id":"db_type=(db_type:String)-instance-method","name":"db_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"db_type","doc":null,"default_value":"","external_name":"db_type","restriction":"String"}],"args_string":"(db_type : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L50","def":{"name":"db_type=","args":[{"name":"db_type","doc":null,"default_value":"","external_name":"db_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@db_type = db_type"}},{"id":"hidden:Bool-instance-method","html_id":"hidden:Bool-instance-method","name":"hidden","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L51","def":{"name":"hidden","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@hidden"}},{"id":"hidden=(hidden:Bool)-instance-method","html_id":"hidden=(hidden:Bool)-instance-method","name":"hidden=","doc":null,"summary":null,"abstract":false,"args":[{"name":"hidden","doc":null,"default_value":"","external_name":"hidden","restriction":"Bool"}],"args_string":"(hidden : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L51","def":{"name":"hidden=","args":[{"name":"hidden","doc":null,"default_value":"","external_name":"hidden","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hidden = hidden"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L47","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String)-instance-method","html_id":"name=(name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L47","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = name"}},{"id":"reference?-instance-method","html_id":"reference?-instance-method","name":"reference?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L87","def":{"name":"reference?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.type == \"reference\""}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L75","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  json.field(\"name\", name)\n  json.field(\"type\", type)\n  json.field(\"cr_type\", cr_type)\n  json.field(\"db_type\", db_type)\n  json.field(\"hidden\", hidden)\n  json.field(\"database\", database)\nend\njson.to_s\n"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L48","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}},{"id":"type=(type:String)-instance-method","html_id":"type=(type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(type : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L48","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = type"}},{"id":"type_mapping(type=&quot;string&quot;)-instance-method","html_id":"type_mapping(type=&amp;quot;string&amp;quot;)-instance-method","name":"type_mapping","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"args_string":"(type = <span class=\"s\">&quot;string&quot;</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/field.cr#L62","def":{"name":"type_mapping","args":[{"name":"type","doc":null,"default_value":"\"string\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if type_mapping = TYPE_MAPPING[@database]?\n  if mapping = type_mapping[@type]?\n    return mapping\n  end\nend\nif mapping = TYPE_MAPPING[\"common\"][@type]?\n  mapping\nelse\n  raise(\"type #{@type} not available\")\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generators","path":"Mochi/CLI/Generators.html","kind":"class","full_name":"Mochi::CLI::Generators","name":"Generators","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators.cr","line_number":10,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEYWORDS","name":"KEYWORDS","value":"{\"abstract\", \"do\", \"if\", \"nil?\", \"select\", \"union\", \"alias\", \"else\", \"in\", \"of\", \"self\", \"unless\", \"as\", \"elsif\", \"include\", \"out\", \"sizeof\", \"until\", \"instance_sizeof\", \"as?\", \"pointerof\", \"struct\", \"end\", \"verbatim\", \"asm\", \"ensure\", \"is_a?\", \"private\", \"super\", \"begin\", \"enum\", \"when\", \"lib\", \"protected\", \"then\", \"while\", \"break\", \"extend\", \"macro\", \"require\", \"true\", \"with\", \"case\", \"false\", \"module\", \"rescue\", \"type\", \"yield\", \"class\", \"for\", \"next\", \"responds_to?\", \"typeof\", \"def\", \"fun\", \"nil\", \"return\", \"uninitialized\", \"adler32\", \"argumenterror\", \"array\", \"atomic\", \"base64\", \"benchmark\", \"bigdecimal\", \"bigfloat\", \"bigint\", \"bigrational\", \"bitarray\", \"bool\", \"box\", \"bytes\", \"channel\", \"char\", \"class\", \"colorize\", \"comparable\", \"complex\", \"concurrent\", \"concurrentexecutionexception\", \"crc32\", \"crypto\", \"crystal\", \"csv\", \"debug\", \"deprecated\", \"deque\", \"digest\", \"dir\", \"divisionbyzeroerror\", \"dl\", \"ecr\", \"enum\", \"enumerable\", \"env\", \"errno\", \"exception\", \"fiber\", \"file\", \"fileutils\", \"flags\", \"flate\", \"float\", \"float32\", \"float64\", \"gc\", \"gzip\", \"hash\", \"html\", \"http\", \"indexable\", \"indexerror\", \"ini\", \"int\", \"int128\", \"int16\", \"int32\", \"int64\", \"int8\", \"invalidbigdecimalexception\", \"invalidbytesequenceerror\", \"io\", \"ipsocket\", \"iterable\", \"iterator\", \"json\", \"keyerror\", \"levenshtein\", \"link\", \"llvm\", \"logger\", \"markdown\", \"math\", \"mime\", \"mutex\", \"namedtuple\", \"nil\", \"nilassertionerror\", \"notimplementederror\", \"number\", \"oauth\", \"oauth2\", \"object\", \"openssl\", \"optionparser\", \"overflowerror\", \"partialcomparable\", \"path\", \"pointer\", \"prettyprint\", \"proc\", \"process\", \"random\", \"range\", \"readline\", \"reference\", \"reflect\", \"regex\", \"semanticversion\", \"set\", \"signal\", \"slice\", \"socket\", \"spec\", \"staticarray\", \"string\", \"stringpool\", \"stringscanner\", \"struct\", \"symbol\", \"system\", \"tcpserver\", \"tcpsocket\", \"termios\", \"time\", \"tuple\", \"typecasterror\", \"udpsocket\", \"uint128\", \"uint16\", \"uint32\", \"uint64\", \"uint8\", \"union\", \"unixserver\", \"unixsocket\", \"uri\", \"uuid\", \"valist\", \"value\", \"weakref\", \"xml\", \"yaml\", \"zip\", \"zlib\"}","doc":"Keywords from https://github.com/crystal-lang/crystal/wiki/Crystal-for-Rubyists#available-keywords as of May 6th, 2019","summary":"<p>Keywords from https://github.com/crystal-lang/crystal/wiki/Crystal-for-Rubyists#available-keywords as of May 6th, 2019</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,directory:String,fields=[]ofString,orm:String=&quot;jennifer&quot;)-class-method","html_id":"new(name:String,directory:String,fields=[]ofString,orm:String=&amp;quot;jennifer&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"},{"name":"fields","doc":null,"default_value":"[] of String","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"\"jennifer\"","external_name":"orm","restriction":"String"}],"args_string":"(name : String, directory : String, fields = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, orm : String = <span class=\"s\">&quot;jennifer&quot;</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L215","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"},{"name":"fields","doc":null,"default_value":"[] of String","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"\"jennifer\"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, directory, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"directory:String-instance-method","html_id":"directory:String-instance-method","name":"directory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L12","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@directory"}},{"id":"error(msg)-instance-method","html_id":"error(msg)-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L255","def":{"name":"error","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log = Logger.new(STDOUT)\nlog.error(msg)\n"}},{"id":"fields:Array(String)-instance-method","html_id":"fields:Array(String)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L13","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@fields"}},{"id":"generate(command:String,options)-instance-method","html_id":"generate(command:String,options)-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"args_string":"(command : String, options)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L236","def":{"name":"generate","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if gen_class = Mochi::CLI::Generator.registered_commands[command]?\n  info(\"Generating #{gen_class}\")\n  (gen_class.new(name, fields, orm)).render(directory, list: true, interactive: !options.assume_yes?, color: options.no_color?)\nelse\n  log = Logger.new(STDOUT)\n  log.info(\"Generator for #{command} not found\")\nend"}},{"id":"info(msg)-instance-method","html_id":"info(msg)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L250","def":{"name":"info","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log = Logger.new(STDOUT)\nlog.info(msg)\n"}},{"id":"model-instance-method","html_id":"model-instance-method","name":"model","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L246","def":{"name":"model","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CLI.config.model"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L11","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"orm:String-instance-method","html_id":"orm:String-instance-method","name":"orm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators.cr#L14","def":{"name":"orm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@orm"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","path":"Mochi/CLI/Helpers.html","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/cli/helpers/helpers.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/helpers.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"run(command,wait=true,shell=true)-class-method","html_id":"run(command,wait=true,shell=true)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"wait","doc":null,"default_value":"true","external_name":"wait","restriction":""},{"name":"shell","doc":null,"default_value":"true","external_name":"shell","restriction":""}],"args_string":"(command, wait = <span class=\"n\">true</span>, shell = <span class=\"n\">true</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/helpers.cr#L77","def":{"name":"run","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"wait","doc":null,"default_value":"true","external_name":"wait","restriction":""},{"name":"shell","doc":null,"default_value":"true","external_name":"shell","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  if wait\n    Process.run(command, shell: shell, output: Process::Redirect::Inherit, error: Process::Redirect::Inherit)\n  else\n    Process.new(command, shell: shell, output: Process::Redirect::Inherit, error: Process::Redirect::Inherit)\n  end\nrescue ex : Errno\n  ex\nend"}}],"constructors":[],"instance_methods":[{"id":"add_dependencies(dependencies)-instance-method","html_id":"add_dependencies(dependencies)-instance-method","name":"add_dependencies","doc":null,"summary":null,"abstract":false,"args":[{"name":"dependencies","doc":null,"default_value":"","external_name":"dependencies","restriction":""}],"args_string":"(dependencies)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/helpers.cr#L63","def":{"name":"add_dependencies","args":[{"name":"dependencies","doc":null,"default_value":"","external_name":"dependencies","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"app_file_path = \"./config/application.cr\"\ninjection_marker = \"# Start Generator Dependencies: Don't modify.\"\napplication = File.read(app_file_path)\ndeps = (dependencies.split(\"\\n\")).reject do |d|\n  application.includes?(d)\nend\nreplacement = \"#{injection_marker}\\n#{deps.join(\"\\n\")}\"\nif deps.size > 0\n  File.write(app_file_path, application.gsub(injection_marker, replacement))\nend\n"}},{"id":"add_plugs(pipeline,plug)-instance-method","html_id":"add_plugs(pipeline,plug)-instance-method","name":"add_plugs","doc":null,"summary":null,"abstract":false,"args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"plug","doc":null,"default_value":"","external_name":"plug","restriction":""}],"args_string":"(pipeline, plug)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/helpers.cr#L31","def":{"name":"add_plugs","args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"plug","doc":null,"default_value":"","external_name":"plug","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"routes_file = File.read(\"./config/routes.cr\")\nif routes_file.includes?(plug)\n  return\nend\npipes = routes_file.match(/pipeline :#{pipeline.to_s}(.*?) do(.+?)end/m)\nif pipes\n  replacement = \"pipeline :#{pipeline.to_s}#{pipes[1]} do\\n  #{pipes[2]}\\n  #{plug}\\nend\"\n  File.write(\"./config/routes.cr\", routes_file.gsub(pipes[0], replacement))\nelse\n  web_pipes = routes_file.match(/pipeline :web(.*?) do(.+?)end/m)\n  if web_pipes\n    replacement = \"pipeline :web#{web_pipes[1]} do\\n  #{web_pipes[2]}\\nend\\n\\npipeline :#{pipeline.to_s} do\\n  #{plug}\\nend\"\n    File.write(\"./config/routes.cr\", routes_file.gsub(web_pipes[0], replacement))\n  end\nend\nsystem(\"crystal tool format ./config/routes.cr\")\n"}},{"id":"add_routes(pipeline,route)-instance-method","html_id":"add_routes(pipeline,route)-instance-method","name":"add_routes","doc":null,"summary":null,"abstract":false,"args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""}],"args_string":"(pipeline, route)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/helpers.cr#L2","def":{"name":"add_routes","args":[{"name":"pipeline","doc":null,"default_value":"","external_name":"pipeline","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"routes_file = File.read(\"./config/routes.cr\")\nroutes = routes_file.match(/routes :#{pipeline.to_s}(.*?) do(.+?)end/m)\nif routes\n  replacement = \"  routes :#{pipeline.to_s}#{routes[1]} do\\n    #{routes[2]}\\n    #{route}\\n  end\"\n  File.write(\"./config/routes.cr\", routes_file.gsub(routes[0], replacement))\nelse\n  web_routes = routes_file.match(/routes :web(.*?) do(.+?)end/m)\n  if web_routes\n    replacement = \"routes :web#{web_routes[1]} do\\n  #{web_routes[2]}\\nend\\n\\nroutes :#{pipeline.to_s} do\\n  #{route}\\nend\"\n    File.write(\"./config/routes.cr\", routes_file.gsub(web_routes[0], replacement))\n  end\nend\nsystem(\"crystal tool format ./config/routes.cr\")\n"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer","path":"Mochi/CLI/Helpers/Jennifer.html","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/cli/helpers/jennifer/migration.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/jennifer/migration.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","path":"Mochi/CLI/Helpers/Jennifer/Migration.html","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/cli/helpers/jennifer/migration.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/jennifer/migration.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer","name":"Jennifer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create_jennifer_heading-instance-method","html_id":"create_jennifer_heading-instance-method","name":"create_jennifer_heading","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/jennifer/migration.cr#L2","def":{"name":"create_jennifer_heading","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","path":"Mochi/CLI/Helpers/Migration.html","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/cli/helpers/granite/migration.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/granite/migration.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create_index_for_reference_fields_sql-instance-method","html_id":"create_index_for_reference_fields_sql-instance-method","name":"create_index_for_reference_fields_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/granite/migration.cr#L2","def":{"name":"create_index_for_reference_fields_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql_statements = reference_fields.map do |field|\n  create_index_for_reference_field_sql(field)\nend\nsql_statements.join(\"\\n\")\n"}},{"id":"create_table_sql-instance-method","html_id":"create_table_sql-instance-method","name":"create_table_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/granite/migration.cr#L9","def":{"name":"create_table_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"CREATE TABLE #{name_plural} (\\n  #{primary_key},\\n  #{create_table_fields_sql}\\n);\""}},{"id":"drop_table_sql-instance-method","html_id":"drop_table_sql-instance-method","name":"drop_table_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/granite/migration.cr#L18","def":{"name":"drop_table_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP TABLE IF EXISTS #{name_plural};\""}},{"id":"primary_key-instance-method","html_id":"primary_key-instance-method","name":"primary_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/helpers/granite/migration.cr#L22","def":{"name":"primary_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case CLI.config.database\nwhen \"pg\"\n  \"id BIGSERIAL PRIMARY KEY\"\nwhen \"mysql\"\n  \"id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY\"\nwhen \"sqlite\"\n  \"id INTEGER NOT NULL PRIMARY KEY\"\nelse\n  \"id INTEGER NOT NULL PRIMARY KEY\"\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Invitable","path":"Mochi/CLI/Invitable.html","kind":"class","full_name":"Mochi::CLI::Invitable","name":"Invitable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/invitable.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/invite_mailer.text.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/invite_mailer.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/views/invitable/edit.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"src/views/invitable/new.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr8(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/invitable_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr10(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_invitable_columns_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/invitable/src/mailers/invite_mailer.text.ecr.ecr\", \"____io\")"}},{"id":"__ecr10(____io)-instance-method","html_id":"__ecr10(____io)-instance-method","name":"__ecr10","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"__ecr10","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/invitable/db/migrations/{{timestamp}}_add_invitable_columns_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/invitable/src/mailers/invite_mailer.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/invitable/src/views/invitable/edit.ecr.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/invitable/src/views/invitable/new.ecr.ecr\", \"____io\")"}},{"id":"__ecr8(____io)-instance-method","html_id":"__ecr8(____io)-instance-method","name":"__ecr8","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L7","def":{"name":"__ecr8","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/invitable/src/controllers/invitable_controller.cr.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/invitable.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Lockable","path":"Mochi/CLI/Lockable.html","kind":"class","full_name":"Mochi::CLI::Lockable","name":"Lockable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/lockable.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/unlock_mailer.text.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/unlock_mailer.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/unlockable_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_lockable_columns_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/lockable/src/mailers/unlock_mailer.text.ecr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/lockable/src/mailers/unlock_mailer.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/lockable/src/controllers/unlockable_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/lockable/db/migrations/{{timestamp}}_add_lockable_columns_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/lockable.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand","path":"Mochi/CLI/MainCommand.html","kind":"class","full_name":"Mochi::CLI::MainCommand","name":"MainCommand","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Cli/Supercommand","kind":"class","full_name":"Cli::Supercommand","name":"Supercommand"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Cli/Supercommand","kind":"class","full_name":"Cli::Supercommand","name":"Supercommand"},{"html_id":"github.com/gitlato/mochi/Cli/CommandBase","kind":"class","full_name":"Cli::CommandBase","name":"CommandBase"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/commands/generate.cr","line_number":6,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands.cr","line_number":7,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ACCEPTABLE_ORMS","name":"ACCEPTABLE_ORMS","value":"[\"g\", \"granite\", \"j\", \"jennifer\"]","doc":null,"summary":null},{"id":"ORM_FULL_NAME","name":"ORM_FULL_NAME","value":"{\"g\" => \"granite\", \"j\" => \"jennifer\"}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"after_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"after_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-class-method","html_id":"after_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"around_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"around_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-class-method","html_id":"around_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"before_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"before_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"before_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-class-method","html_id":"before_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","html_id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-class-method","html_id":"on_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-class-method","html_id":"on_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","html_id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"run(argv:Array(String)=[]of::String,&block:Mochi::CLI::MainCommand->)-class-method","html_id":"run(argv:Array(String)=[]of::String,&amp;block:Mochi::CLI::MainCommand-&gt;)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, &block : Mochi::CLI::MainCommand -> )","source_link":null,"def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> )"},"return_type":"","visibility":"Public","body":"__klass.mochi_cli_main_command__run(argv, &block)"}},{"id":"run(argv:Array(String))-class-method","html_id":"run(argv:Array(String))-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.mochi_cli_main_command__run(argv)"}},{"id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","html_id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(previous : Cli::CommandBase, argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"run","args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.mochi_cli_main_command__run(previous, argv)"}},{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"run([] of ::String)"}}],"constructors":[],"instance_methods":[{"id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"after_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-instance-method","html_id":"after_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"around_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-instance-method","html_id":"around_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"before_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-instance-method","html_id":"before_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"callback_results:Hash(String,Callback::ResultSet(Nil))-instance-method","html_id":"callback_results:Hash(String,Callback::ResultSet(Nil))-instance-method","name":"callback_results","doc":"Returns callback results.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Callback::ResultSet(Nil))","source_link":null,"def":{"name":"callback_results","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@callback_results"}},{"id":"callback_results_for_exit-instance-method","html_id":"callback_results_for_exit-instance-method","name":"callback_results_for_exit","doc":"Returns callback results of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the exit group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_exit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"exit\"]? || (@callback_results[\"exit\"] = ::Callback::ResultSet(Nil).new)).as(::Callback::ResultSet(Nil))"}},{"id":"callback_results_for_initialize-instance-method","html_id":"callback_results_for_initialize-instance-method","name":"callback_results_for_initialize","doc":"Returns callback results of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the initialize group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_initialize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"initialize\"]? || (@callback_results[\"initialize\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","html_id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Mochi::CLI::MainCommand,Cli::Exit->Nil)-instance-method","html_id":"on_exit(name=nil,&amp;block:Mochi::CLI::MainCommand,Cli::Exit-&gt;Nil)-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","html_id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"on_initialize(name=nil,&block:Mochi::CLI::MainCommand->Nil)-instance-method","html_id":"on_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand-&gt;Nil)-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"run_callbacks_for_exit(*args,&)-instance-method","html_id":"run_callbacks_for_exit(*args,&amp;)-instance-method","name":"run_callbacks_for_exit","doc":"Invokes all callbacks of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the exit group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_exit","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_exit\nrun_callbacks_for_exit__before(results, self, *args)\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__after(results, self, *args)\nresult\n"}},{"id":"run_callbacks_for_initialize(*args,&)-instance-method","html_id":"run_callbacks_for_initialize(*args,&amp;)-instance-method","name":"run_callbacks_for_initialize","doc":"Invokes all callbacks of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the initialize group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_initialize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_initialize\nrun_callbacks_for_initialize__before(results, self, *args)\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate","path":"Mochi/CLI/MainCommand/Generate.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate","name":"Generate","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Command","kind":"class","full_name":"Command","name":"Command"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Command","kind":"class","full_name":"Command","name":"Command"},{"html_id":"github.com/gitlato/mochi/Cli/Command","kind":"class","full_name":"Cli::Command","name":"Command"},{"html_id":"github.com/gitlato/mochi/Cli/CommandBase","kind":"class","full_name":"Cli::CommandBase","name":"CommandBase"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/commands/generate.cr","line_number":13,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand","kind":"class","full_name":"Mochi::CLI::MainCommand","name":"MainCommand"},"doc":null,"summary":null,"class_methods":[{"id":"after_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"after_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"after_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-class-method","html_id":"after_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"after_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"around_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"around_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"around_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-class-method","html_id":"around_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"around_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"before_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"before_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"before_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"before_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-class-method","html_id":"before_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"before_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","html_id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-class-method","html_id":"on_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-class-method","name":"on_exit","doc":"Registers a callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-class-method","html_id":"on_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","html_id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-class-method","name":"on_initialize","doc":"Registers a callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"run(argv:Array(String)=[]of::String,&block:Mochi::CLI::MainCommand::Generate->)-class-method","html_id":"run(argv:Array(String)=[]of::String,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, &block : Mochi::CLI::MainCommand::Generate -> )","source_link":null,"def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> )"},"return_type":"","visibility":"Public","body":"__klass.mochi_cli_main_command_generate__run(argv, &block)"}},{"id":"run(argv:Array(String))-class-method","html_id":"run(argv:Array(String))-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"args_string":"(argv : Array(String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"run","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.mochi_cli_main_command_generate__run(argv)"}},{"id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","html_id":"run(previous:Cli::CommandBase,argv:Array(String)=[]of::String)-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"args_string":"(previous : Cli::CommandBase, argv : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"run","args":[{"name":"previous","doc":null,"default_value":"","external_name":"previous","restriction":"::Cli::CommandBase"},{"name":"argv","doc":null,"default_value":"[] of ::String","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__klass.mochi_cli_main_command_generate__run(previous, argv)"}},{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":"Run the command.\n\nThis method is automatically defined by the Crystal CLI library.","summary":"<p>Run the command.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"run([] of ::String)"}}],"constructors":[],"instance_methods":[{"id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"after_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, name)"}},{"id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"after_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"after_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__after(proc, nil)"}},{"id":"after_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"after_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"after_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"after_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__after(proc, name)\n"}},{"id":"after_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"after_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__after(proc, name)\n"}},{"id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"after_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, nil)"}},{"id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"after_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"after_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"after_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__after(proc, name)"}},{"id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"around_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, nil)"}},{"id":"around_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"around_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__around(proc, name)\n"}},{"id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"around_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"around_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"around_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__around(proc, name)"}},{"id":"around_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"around_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__around(proc, name)\n"}},{"id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"around_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, nil)"}},{"id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"around_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"around_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"around_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__around(proc, name)"}},{"id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"before_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, name)"}},{"id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"before_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"before_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__before(proc, nil)"}},{"id":"before_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"before_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"before_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"before_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__before(proc, name)\n"}},{"id":"before_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"before_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__before(proc, name)\n"}},{"id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"before_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, nil)"}},{"id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"before_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"before_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"before_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__before(proc, name)"}},{"id":"callback_results_for_exit-instance-method","html_id":"callback_results_for_exit-instance-method","name":"callback_results_for_exit","doc":"Returns callback results of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the exit group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_exit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"exit\"]? || (@callback_results[\"exit\"] = ::Callback::ResultSet(Nil).new)).as(::Callback::ResultSet(Nil))"}},{"id":"callback_results_for_initialize-instance-method","html_id":"callback_results_for_initialize-instance-method","name":"callback_results_for_initialize","doc":"Returns callback results of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the initialize group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_initialize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"initialize\"]? || (@callback_results[\"initialize\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"on_exit(proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, nil)"}},{"id":"on_exit(name=nil,&block:Mochi::CLI::MainCommand::Generate,Cli::Exit->Nil)-instance-method","html_id":"on_exit(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate,Cli::Exit-&gt;Nil)-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate, Cli::Exit -> Nil)","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit -> Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate, _2 : ::Cli::Exit) do\n  block.call(_1, _2)\nend\nappend_callback_for_exit__on(proc, name)\n"}},{"id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","html_id":"on_exit(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Cli::Exit,Nil))-instance-method","name":"on_exit","doc":"Registers a dynamic callback for the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the exit group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Cli::Exit, Nil))","source_link":null,"def":{"name":"on_exit","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Cli::Exit, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_exit__on(proc, name)"}},{"id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"on_initialize(proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, nil)"}},{"id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","html_id":"on_initialize(name,proc:::Proc(Mochi::CLI::MainCommand::Generate,Nil))-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate, Nil))","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_initialize__on(proc, name)"}},{"id":"on_initialize(name=nil,&block:Mochi::CLI::MainCommand::Generate->Nil)-instance-method","html_id":"on_initialize(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate-&gt;Nil)-instance-method","name":"on_initialize","doc":"Registers a dynamic callback for the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the initialize group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate -> Nil)","source_link":null,"def":{"name":"on_initialize","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate) do\n  block.call(_1)\nend\nappend_callback_for_initialize__on(proc, name)\n"}},{"id":"recipe-instance-method","html_id":"recipe-instance-method","name":"recipe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L35","def":{"name":"recipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CLI.config.recipe"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Runs the command.\n\nThis method is an entrypoint for running a command.\n\nSubclasses must override this method.","summary":"<p>Runs the command.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L28","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_orm_argument!\nfull_orm_name = modify_orm_name\ngenerator = Generators.new(\"user\", \".\", args.fields, full_orm_name)\ngenerator.generate(args.type, options)\n"}},{"id":"run_callbacks_for_exit(*args,&)-instance-method","html_id":"run_callbacks_for_exit(*args,&amp;)-instance-method","name":"run_callbacks_for_exit","doc":"Invokes all callbacks of the exit group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the exit group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_exit","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_exit\nrun_callbacks_for_exit__before(results, self, *args)\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_exit__around(results, self, *args)\nrun_callbacks_for_exit__after(results, self, *args)\nresult\n"}},{"id":"run_callbacks_for_initialize(*args,&)-instance-method","html_id":"run_callbacks_for_initialize(*args,&amp;)-instance-method","name":"run_callbacks_for_initialize","doc":"Invokes all callbacks of the initialize group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the initialize group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_initialize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_initialize\nrun_callbacks_for_initialize__before(results, self, *args)\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_initialize__around(results, self, *args)\nrun_callbacks_for_initialize__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate/Help","path":"Mochi/CLI/MainCommand/Generate/Help.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate::Help","name":"Help","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/commands/generate.cr","line_number":13,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands/generate.cr","line_number":23,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands/generate.cr","line_number":55,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate","name":"Generate"},"doc":"Configures help message attributes for the `Generate` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>Configures help message attributes for the <code><a href=\"../../../../Mochi/CLI/MainCommand/Generate.html\">Generate</a></code> class.</p>","class_methods":[{"id":"caption(s:String)-class-method","html_id":"caption(s:String)-class-method","name":"caption","doc":"Sets the caption.","summary":"<p>Sets the caption.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"caption","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand::Generate.__klass.caption = s"}},{"id":"footer(s:String)-class-method","html_id":"footer(s:String)-class-method","name":"footer","doc":"Sets the footer.","summary":"<p>Sets the footer.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"footer","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand::Generate.__klass.footer = s"}},{"id":"header(s:String)-class-method","html_id":"header(s:String)-class-method","name":"header","doc":"Sets the header.","summary":"<p>Sets the header.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"header","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand::Generate.__klass.header = s"}},{"id":"title(s:String)-class-method","html_id":"title(s:String)-class-method","name":"title","doc":"Sets the title.","summary":"<p>Sets the title.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"title","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand::Generate.__klass.title = s"}},{"id":"unparsed_args(s)-class-method","html_id":"unparsed_args(s)-class-method","name":"unparsed_args","doc":"Sets the string for unparsed arguments.","summary":"<p>Sets the string for unparsed arguments.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L13","def":{"name":"unparsed_args","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand::Generate.__klass.unparsed_args = s"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate/Options","path":"Mochi/CLI/MainCommand/Generate/Options.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate::Options","name":"Options","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Command/Options","kind":"class","full_name":"Command::Options","name":"Options"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Command/Options","kind":"class","full_name":"Command::Options","name":"Options"},{"html_id":"github.com/gitlato/mochi/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},{"html_id":"github.com/gitlato/mochi/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/commands/generate.cr","line_number":13,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands/generate.cr","line_number":14,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate","name":"Generate"},"doc":"The dedicated Cli::OptionModel subclass for the `Generate` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>The dedicated Cli::OptionModel subclass for the <code><a href=\"../../../../Mochi/CLI/MainCommand/Generate.html\">Generate</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"assume_yes?-instance-method","html_id":"assume_yes?-instance-method","name":"assume_yes?","doc":"Returns the -y option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -y option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"assume_yes?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"-y\"]?)"}},{"id":"fields-instance-method","html_id":"fields-instance-method","name":"fields","doc":"Returns the FIELDS argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the FIELDS argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArrayArgument::Typed::Type][\"fields\"]"}},{"id":"no_color?-instance-method","html_id":"no_color?-instance-method","name":"no_color?","doc":"Returns the --no-color option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the --no-color option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"--no-color\"]?)"}},{"id":"orm-instance-method","html_id":"orm-instance-method","name":"orm","doc":"Returns the ORM argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the ORM argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"orm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"orm\"]"}},{"id":"orm?-instance-method","html_id":"orm?-instance-method","name":"orm?","doc":"Returns the ORM argument value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the ORM argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"orm?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"orm\"]?"}},{"id":"type-instance-method","html_id":"type-instance-method","name":"type","doc":"Returns the TYPE argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the TYPE argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"type\"]"}},{"id":"type?-instance-method","html_id":"type?-instance-method","name":"type?","doc":"Returns the TYPE argument value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the TYPE argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"type?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"type\"]?"}},{"id":"y?-instance-method","html_id":"y?-instance-method","name":"y?","doc":"Returns the -y option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -y option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"-y\"]?)"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate/Options/Parser","path":"Mochi/CLI/MainCommand/Generate/Options/Parser.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate::Options::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Command/Options/Parser","kind":"class","full_name":"Command::Options::Parser","name":"Parser"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Command/Options/Parser","kind":"class","full_name":"Command::Options::Parser","name":"Parser"},{"html_id":"github.com/gitlato/mochi/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},{"html_id":"github.com/gitlato/mochi/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Generate/Options","kind":"class","full_name":"Mochi::CLI::MainCommand::Generate::Options","name":"Options"},"doc":"The dedicated Optarg::Parser subclass for the `Options` class.\n\nThis class is automatically defined by the optarg library.","summary":"<p>The dedicated Optarg::Parser subclass for the <code><a href=\"../../../../../Mochi/CLI/MainCommand/Generate/Options.html\">Options</a></code> class.</p>","class_methods":[{"id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"after_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"around_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"before_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","html_id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-class-method","html_id":"on_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}}],"constructors":[],"instance_methods":[{"id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"after_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"around_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"before_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"callback_results_for_validate-instance-method","html_id":"callback_results_for_validate-instance-method","name":"callback_results_for_validate","doc":"Returns callback results of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the validate group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"validate\"]? || (@callback_results[\"validate\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"data:Mochi::CLI::MainCommand::Generate::Options-instance-method","html_id":"data:Mochi::CLI::MainCommand::Generate::Options-instance-method","name":"data","doc":"Returns a target model instance.","summary":"<p>Returns a target model instance.</p>","abstract":false,"args":[],"args_string":" : Mochi::CLI::MainCommand::Generate::Options","source_link":null,"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Mochi::CLI::MainCommand::Generate::Options","visibility":"Public","body":"@data.as(::Mochi::CLI::MainCommand::Generate::Options)"}},{"id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","html_id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options->Nil)-instance-method","html_id":"on_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Generate::Options::Parser,Mochi::CLI::MainCommand::Generate::Options-&gt;Nil)-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Generate::Options::Parser, Mochi::CLI::MainCommand::Generate::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Generate::Options::Parser, ::Mochi::CLI::MainCommand::Generate::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Generate::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Generate::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}},{"id":"run_callbacks_for_validate(*args,&)-instance-method","html_id":"run_callbacks_for_validate(*args,&amp;)-instance-method","name":"run_callbacks_for_validate","doc":"Invokes all callbacks of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the validate group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_validate","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_validate\nrun_callbacks_for_validate__before(results, self, *args)\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Help","path":"Mochi/CLI/MainCommand/Help.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Help","name":"Help","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/commands/generate.cr","line_number":6,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands.cr","line_number":11,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand","kind":"class","full_name":"Mochi::CLI::MainCommand","name":"MainCommand"},"doc":"Configures help message attributes for the `MainCommand` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>Configures help message attributes for the <code><a href=\"../../../Mochi/CLI/MainCommand.html\">MainCommand</a></code> class.</p>","class_methods":[{"id":"caption(s:String)-class-method","html_id":"caption(s:String)-class-method","name":"caption","doc":"Sets the caption.","summary":"<p>Sets the caption.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"caption","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand.__klass.caption = s"}},{"id":"footer(s:String)-class-method","html_id":"footer(s:String)-class-method","name":"footer","doc":"Sets the footer.","summary":"<p>Sets the footer.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"footer","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand.__klass.footer = s"}},{"id":"header(s:String)-class-method","html_id":"header(s:String)-class-method","name":"header","doc":"Sets the header.","summary":"<p>Sets the header.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"header","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand.__klass.header = s"}},{"id":"title(s:String)-class-method","html_id":"title(s:String)-class-method","name":"title","doc":"Sets the title.","summary":"<p>Sets the title.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"title","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand.__klass.title = s"}},{"id":"unparsed_args(s)-class-method","html_id":"unparsed_args(s)-class-method","name":"unparsed_args","doc":"Sets the string for unparsed arguments.","summary":"<p>Sets the string for unparsed arguments.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr#L6","def":{"name":"unparsed_args","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Mochi::CLI::MainCommand.__klass.unparsed_args = s"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Options","path":"Mochi/CLI/MainCommand/Options.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Options","name":"Options","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Cli/OptionModel","kind":"class","full_name":"Cli::OptionModel","name":"OptionModel"},{"html_id":"github.com/gitlato/mochi/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/commands/generate.cr","line_number":6,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands/generate.cr"},{"filename":"mochi/cli/commands.cr","line_number":24,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/commands.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand","kind":"class","full_name":"Mochi::CLI::MainCommand","name":"MainCommand"},"doc":"The dedicated Cli::OptionModel subclass for the `MainCommand` class.\n\nThis class is automatically defined by the Crystal CLI library.","summary":"<p>The dedicated Cli::OptionModel subclass for the <code><a href=\"../../../Mochi/CLI/MainCommand.html\">MainCommand</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Options/Parser","path":"Mochi/CLI/MainCommand/Options/Parser.html","kind":"class","full_name":"Mochi::CLI::MainCommand::Options::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Cli/OptionModel/Parser","kind":"class","full_name":"Cli::OptionModel::Parser","name":"Parser"},{"html_id":"github.com/gitlato/mochi/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/MainCommand/Options","kind":"class","full_name":"Mochi::CLI::MainCommand::Options","name":"Options"},"doc":"The dedicated Optarg::Parser subclass for the `Options` class.\n\nThis class is automatically defined by the optarg library.","summary":"<p>The dedicated Optarg::Parser subclass for the <code><a href=\"../../../../Mochi/CLI/MainCommand/Options.html\">Options</a></code> class.</p>","class_methods":[{"id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-class-method","html_id":"after_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-class-method","html_id":"around_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-class-method","html_id":"before_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","html_id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-class-method","html_id":"on_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}}],"constructors":[],"instance_methods":[{"id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"after_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"after_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-instance-method","html_id":"after_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"around_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"around_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-instance-method","html_id":"around_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"before_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"before_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-instance-method","html_id":"before_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"callback_results_for_validate-instance-method","html_id":"callback_results_for_validate-instance-method","name":"callback_results_for_validate","doc":"Returns callback results of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the validate group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"validate\"]? || (@callback_results[\"validate\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"data:Mochi::CLI::MainCommand::Options-instance-method","html_id":"data:Mochi::CLI::MainCommand::Options-instance-method","name":"data","doc":"Returns a target model instance.","summary":"<p>Returns a target model instance.</p>","abstract":false,"args":[],"args_string":" : Mochi::CLI::MainCommand::Options","source_link":null,"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Mochi::CLI::MainCommand::Options","visibility":"Public","body":"@data.as(::Mochi::CLI::MainCommand::Options)"}},{"id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"on_validate(name,proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(name, proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","html_id":"on_validate(proc:::Proc(Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"args_string":"(proc : ::Proc(Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options->Nil)-instance-method","html_id":"on_validate(name=nil,&amp;block:Mochi::CLI::MainCommand::Options::Parser,Mochi::CLI::MainCommand::Options-&gt;Nil)-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : Mochi::CLI::MainCommand::Options::Parser, Mochi::CLI::MainCommand::Options -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::Mochi::CLI::MainCommand::Options::Parser, ::Mochi::CLI::MainCommand::Options -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::Mochi::CLI::MainCommand::Options::Parser, _2 : ::Mochi::CLI::MainCommand::Options) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}},{"id":"run_callbacks_for_validate(*args,&)-instance-method","html_id":"run_callbacks_for_validate(*args,&amp;)-instance-method","name":"run_callbacks_for_validate","doc":"Invokes all callbacks of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the validate group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &)","source_link":null,"def":{"name":"run_callbacks_for_validate","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_validate\nrun_callbacks_for_validate__before(results, self, *args)\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Omniauthable","path":"Mochi/CLI/Omniauthable.html","kind":"class","full_name":"Mochi::CLI::Omniauthable","name":"Omniauthable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/omniauth.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L11","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/omniauth/session_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/omniauth/#{@name}_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_omniauth_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/omniauthable/src/controllers/omniauth/session_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/omniauthable/src/controllers/omniauth/{{name}}_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/omniauthable/db/migrations/{{timestamp}}_add_omniauth_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/omniauth.cr#L18","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes\ninject_require_omniauth\n"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Recoverable","path":"Mochi/CLI/Recoverable.html","kind":"class","full_name":"Mochi::CLI::Recoverable","name":"Recoverable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/recoverable.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/recovery_mailer.text.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr2(io)\n____files << (::Teeplate::StringData.new(\"src/mailers/recovery_mailer.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr4(io)\n____files << (::Teeplate::StringData.new(\"src/views/recovery/new.ecr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr6(io)\n____files << (::Teeplate::StringData.new(\"src/controllers/password_controller.cr\", io.to_s, File::Permissions.from_value(436)))\nio = IO::Memory.new\n__ecr8(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_recoverable_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/recoverable/src/mailers/recovery_mailer.text.ecr.ecr\", \"____io\")"}},{"id":"__ecr2(____io)-instance-method","html_id":"__ecr2(____io)-instance-method","name":"__ecr2","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L7","def":{"name":"__ecr2","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/recoverable/src/mailers/recovery_mailer.cr.ecr\", \"____io\")"}},{"id":"__ecr4(____io)-instance-method","html_id":"__ecr4(____io)-instance-method","name":"__ecr4","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L7","def":{"name":"__ecr4","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/recoverable/src/views/recovery/new.ecr.ecr\", \"____io\")"}},{"id":"__ecr6(____io)-instance-method","html_id":"__ecr6(____io)-instance-method","name":"__ecr6","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L7","def":{"name":"__ecr6","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/recoverable/src/controllers/password_controller.cr.ecr\", \"____io\")"}},{"id":"__ecr8(____io)-instance-method","html_id":"__ecr8(____io)-instance-method","name":"__ecr8","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L7","def":{"name":"__ecr8","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/recoverable/db/migrations/{{timestamp}}_add_recoverable_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/recoverable.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_routes"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Trackable","path":"Mochi/CLI/Trackable.html","kind":"class","full_name":"Mochi::CLI::Trackable","name":"Trackable","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Generator","kind":"class","full_name":"Mochi::CLI::Generator","name":"Generator"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers","kind":"module","full_name":"Mochi::CLI::Helpers","name":"Helpers"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Jennifer/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Jennifer::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Mochi/CLI/Helpers/Migration","kind":"module","full_name":"Mochi::CLI::Helpers::Migration","name":"Migration"},{"html_id":"github.com/gitlato/mochi/Teeplate/FileTree","kind":"class","full_name":"Teeplate::FileTree","name":"FileTree"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/cli/generators/trackable.cr","line_number":5,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/CLI","kind":"module","full_name":"Mochi::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,fields,orm:String)-class-method","html_id":"new(name,fields,orm:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"args_string":"(name, fields, orm : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""},{"name":"orm","doc":null,"default_value":"","external_name":"orm","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, fields, orm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"____collect_files(____files)-instance-method","html_id":"____collect_files(____files)-instance-method","name":"____collect_files","doc":":nodoc:","summary":"<p>:nodoc:</p>","abstract":false,"args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"args_string":"(____files)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L7","def":{"name":"____collect_files","args":[{"name":"____files","doc":null,"default_value":"","external_name":"____files","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\n__ecr0(io)\n____files << (::Teeplate::StringData.new(\"db/migrations/#{@timestamp}_add_trackable_columns_to_#{@name}.#{@migration_extension}\", io.to_s, File::Permissions.from_value(436)))\n"}},{"id":"__ecr0(____io)-instance-method","html_id":"__ecr0(____io)-instance-method","name":"__ecr0","doc":null,"summary":null,"abstract":false,"args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"args_string":"(____io)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L7","def":{"name":"__ecr0","args":[{"name":"____io","doc":null,"default_value":"","external_name":"____io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::ECR.embed(\"/home/travis/build/gitlato/mochi/src/mochi/cli/templates/trackable/db/migrations/{{timestamp}}_add_trackable_columns_to_{{name}}.{{migration_extension}}.ecr\", \"____io\")"}},{"id":"fields:Array(Field)-instance-method","html_id":"fields:Array(Field)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Field)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L9","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Field)","visibility":"Public","body":"@fields"}},{"id":"fields=(fields:Array(Field))-instance-method","html_id":"fields=(fields:Array(Field))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"args_string":"(fields : Array(Field))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L9","def":{"name":"fields=","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(Field)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = fields"}},{"id":"migration_extension:String-instance-method","html_id":"migration_extension:String-instance-method","name":"migration_extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L10","def":{"name":"migration_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@migration_extension"}},{"id":"pre_render(directory,**args)-instance-method","html_id":"pre_render(directory,**args)-instance-method","name":"pre_render","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"args_string":"(directory, **args)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/cli/generators/trackable.cr#L19","def":{"name":"pre_render","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Configuration","path":"Mochi/Configuration.html","kind":"class","full_name":"Mochi::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/configuration.cr","line_number":12,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":"Main configuration class for mochi\nHolds all variables for configuration (excluding omniauthable)\n\nUsage:\n\n```\nMochi.setup do |config|\n  config.property = X\nend\n```","summary":"<p>Main configuration class for mochi Holds all variables for configuration (excluding omniauthable)</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"accept_invitation_within:Int32-instance-method","html_id":"accept_invitation_within:Int32-instance-method","name":"accept_invitation_within","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L68","def":{"name":"accept_invitation_within","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@accept_invitation_within"}},{"id":"accept_invitation_within=(accept_invitation_within:Int32)-instance-method","html_id":"accept_invitation_within=(accept_invitation_within:Int32)-instance-method","name":"accept_invitation_within=","doc":null,"summary":null,"abstract":false,"args":[{"name":"accept_invitation_within","doc":null,"default_value":"","external_name":"accept_invitation_within","restriction":"Int32"}],"args_string":"(accept_invitation_within : Int32)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L68","def":{"name":"accept_invitation_within=","args":[{"name":"accept_invitation_within","doc":null,"default_value":"","external_name":"accept_invitation_within","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@accept_invitation_within = accept_invitation_within"}},{"id":"allow_unconfirmed_access_for:Int64?-instance-method","html_id":"allow_unconfirmed_access_for:Int64?-instance-method","name":"allow_unconfirmed_access_for","doc":"Allow account access for X number of days\nwithout confirming email\n\n`Nil` will give indefinite access","summary":"<p>Allow account access for X number of days without confirming email</p>","abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L29","def":{"name":"allow_unconfirmed_access_for","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil | Int64","visibility":"Public","body":"@allow_unconfirmed_access_for"}},{"id":"allow_unconfirmed_access_for=(allow_unconfirmed_access_for:Int64?)-instance-method","html_id":"allow_unconfirmed_access_for=(allow_unconfirmed_access_for:Int64?)-instance-method","name":"allow_unconfirmed_access_for=","doc":"Allow account access for X number of days\nwithout confirming email\n\n`Nil` will give indefinite access","summary":"<p>Allow account access for X number of days without confirming email</p>","abstract":false,"args":[{"name":"allow_unconfirmed_access_for","doc":null,"default_value":"","external_name":"allow_unconfirmed_access_for","restriction":"Nil | Int64"}],"args_string":"(allow_unconfirmed_access_for : Int64?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L29","def":{"name":"allow_unconfirmed_access_for=","args":[{"name":"allow_unconfirmed_access_for","doc":null,"default_value":"","external_name":"allow_unconfirmed_access_for","restriction":"Nil | Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@allow_unconfirmed_access_for = allow_unconfirmed_access_for"}},{"id":"confirm_within:Int64-instance-method","html_id":"confirm_within:Int64-instance-method","name":"confirm_within","doc":"How many days a confirmation_token lasts\nDefault is `7`","summary":"<p>How many days a confirmation_token lasts Default is <code>7</code></p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L33","def":{"name":"confirm_within","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@confirm_within"}},{"id":"confirm_within=(confirm_within:Int64)-instance-method","html_id":"confirm_within=(confirm_within:Int64)-instance-method","name":"confirm_within=","doc":"How many days a confirmation_token lasts\nDefault is `7`","summary":"<p>How many days a confirmation_token lasts Default is <code>7</code></p>","abstract":false,"args":[{"name":"confirm_within","doc":null,"default_value":"","external_name":"confirm_within","restriction":"Int64"}],"args_string":"(confirm_within : Int64)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L33","def":{"name":"confirm_within=","args":[{"name":"confirm_within","doc":null,"default_value":"","external_name":"confirm_within","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@confirm_within = confirm_within"}},{"id":"last_attempt_warning:String-instance-method","html_id":"last_attempt_warning:String-instance-method","name":"last_attempt_warning","doc":"The message users recieve when they are on their final login attempt","summary":"<p>The message users recieve when they are on their final login attempt</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L60","def":{"name":"last_attempt_warning","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@last_attempt_warning"}},{"id":"last_attempt_warning=(last_attempt_warning:String)-instance-method","html_id":"last_attempt_warning=(last_attempt_warning:String)-instance-method","name":"last_attempt_warning=","doc":"The message users recieve when they are on their final login attempt","summary":"<p>The message users recieve when they are on their final login attempt</p>","abstract":false,"args":[{"name":"last_attempt_warning","doc":null,"default_value":"","external_name":"last_attempt_warning","restriction":"String"}],"args_string":"(last_attempt_warning : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L60","def":{"name":"last_attempt_warning=","args":[{"name":"last_attempt_warning","doc":null,"default_value":"","external_name":"last_attempt_warning","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_attempt_warning = last_attempt_warning"}},{"id":"mailer_class:Mochi::Mailer.class-instance-method","html_id":"mailer_class:Mochi::Mailer.class-instance-method","name":"mailer_class","doc":"Configure which class recieves the call to all emails.\n\nDefault is `Mochi::DefaultMailer`\n\nFeel free to inherit from `Mochi::Mailer` and implement your own","summary":"<p>Configure which class recieves the call to all emails.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">Mochi</span><span class=\"t\">::</span><span class=\"t\">Mailer</span>.<span class=\"k\">class</span>","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L40","def":{"name":"mailer_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mochi::Mailer.class","visibility":"Public","body":"@mailer_class"}},{"id":"mailer_class=(mailer_class:Mochi::Mailer.class)-instance-method","html_id":"mailer_class=(mailer_class:Mochi::Mailer.class)-instance-method","name":"mailer_class=","doc":"Configure which class recieves the call to all emails.\n\nDefault is `Mochi::DefaultMailer`\n\nFeel free to inherit from `Mochi::Mailer` and implement your own","summary":"<p>Configure which class recieves the call to all emails.</p>","abstract":false,"args":[{"name":"mailer_class","doc":null,"default_value":"","external_name":"mailer_class","restriction":"Mochi::Mailer.class"}],"args_string":"(mailer_class : <span class=\"t\">Mochi</span><span class=\"t\">::</span><span class=\"t\">Mailer</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L40","def":{"name":"mailer_class=","args":[{"name":"mailer_class","doc":null,"default_value":"","external_name":"mailer_class","restriction":"Mochi::Mailer.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mailer_class = mailer_class"}},{"id":"maximum_attempts:Int32-instance-method","html_id":"maximum_attempts:Int32-instance-method","name":"maximum_attempts","doc":"Number of attempts a user has until their\naccount is locked","summary":"<p>Number of attempts a user has until their account is locked</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L53","def":{"name":"maximum_attempts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@maximum_attempts"}},{"id":"maximum_attempts=(maximum_attempts:Int32)-instance-method","html_id":"maximum_attempts=(maximum_attempts:Int32)-instance-method","name":"maximum_attempts=","doc":"Number of attempts a user has until their\naccount is locked","summary":"<p>Number of attempts a user has until their account is locked</p>","abstract":false,"args":[{"name":"maximum_attempts","doc":null,"default_value":"","external_name":"maximum_attempts","restriction":"Int32"}],"args_string":"(maximum_attempts : Int32)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L53","def":{"name":"maximum_attempts=","args":[{"name":"maximum_attempts","doc":null,"default_value":"","external_name":"maximum_attempts","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@maximum_attempts = maximum_attempts"}},{"id":"paranoid:Bool-instance-method","html_id":"paranoid:Bool-instance-method","name":"paranoid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L66","def":{"name":"paranoid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@paranoid"}},{"id":"paranoid=(paranoid:Bool)-instance-method","html_id":"paranoid=(paranoid:Bool)-instance-method","name":"paranoid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"paranoid","doc":null,"default_value":"","external_name":"paranoid","restriction":"Bool"}],"args_string":"(paranoid : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L66","def":{"name":"paranoid=","args":[{"name":"paranoid","doc":null,"default_value":"","external_name":"paranoid","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@paranoid = paranoid"}},{"id":"reconfirmable:Bool-instance-method","html_id":"reconfirmable:Bool-instance-method","name":"reconfirmable","doc":"Allow/prevent users to reconfirm with the confirmable module\n\nDefault is `false`","summary":"<p>Allow/prevent users to reconfirm with the confirmable module</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L23","def":{"name":"reconfirmable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@reconfirmable"}},{"id":"reconfirmable=(reconfirmable:Bool)-instance-method","html_id":"reconfirmable=(reconfirmable:Bool)-instance-method","name":"reconfirmable=","doc":"Allow/prevent users to reconfirm with the confirmable module\n\nDefault is `false`","summary":"<p>Allow/prevent users to reconfirm with the confirmable module</p>","abstract":false,"args":[{"name":"reconfirmable","doc":null,"default_value":"","external_name":"reconfirmable","restriction":"Bool"}],"args_string":"(reconfirmable : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L23","def":{"name":"reconfirmable=","args":[{"name":"reconfirmable","doc":null,"default_value":"","external_name":"reconfirmable","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reconfirmable = reconfirmable"}},{"id":"reset_password_within:Int64-instance-method","html_id":"reset_password_within:Int64-instance-method","name":"reset_password_within","doc":"The time period within which the password\nmust be reset or the token expires. Number\nis measured in days","summary":"<p>The time period within which the password must be reset or the token expires.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L45","def":{"name":"reset_password_within","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@reset_password_within"}},{"id":"reset_password_within=(reset_password_within:Int64)-instance-method","html_id":"reset_password_within=(reset_password_within:Int64)-instance-method","name":"reset_password_within=","doc":"The time period within which the password\nmust be reset or the token expires. Number\nis measured in days","summary":"<p>The time period within which the password must be reset or the token expires.</p>","abstract":false,"args":[{"name":"reset_password_within","doc":null,"default_value":"","external_name":"reset_password_within","restriction":"Int64"}],"args_string":"(reset_password_within : Int64)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L45","def":{"name":"reset_password_within=","args":[{"name":"reset_password_within","doc":null,"default_value":"","external_name":"reset_password_within","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reset_password_within = reset_password_within"}},{"id":"sign_in_after_reset_password:Bool-instance-method","html_id":"sign_in_after_reset_password:Bool-instance-method","name":"sign_in_after_reset_password","doc":"Whether or not to sign in the user\nautomatically after a password reset.","summary":"<p>Whether or not to sign in the user automatically after a password reset.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L49","def":{"name":"sign_in_after_reset_password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@sign_in_after_reset_password"}},{"id":"sign_in_after_reset_password=(sign_in_after_reset_password:Bool)-instance-method","html_id":"sign_in_after_reset_password=(sign_in_after_reset_password:Bool)-instance-method","name":"sign_in_after_reset_password=","doc":"Whether or not to sign in the user\nautomatically after a password reset.","summary":"<p>Whether or not to sign in the user automatically after a password reset.</p>","abstract":false,"args":[{"name":"sign_in_after_reset_password","doc":null,"default_value":"","external_name":"sign_in_after_reset_password","restriction":"Bool"}],"args_string":"(sign_in_after_reset_password : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L49","def":{"name":"sign_in_after_reset_password=","args":[{"name":"sign_in_after_reset_password","doc":null,"default_value":"","external_name":"sign_in_after_reset_password","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sign_in_after_reset_password = sign_in_after_reset_password"}},{"id":"sign_in_after_unlocking:Bool-instance-method","html_id":"sign_in_after_unlocking:Bool-instance-method","name":"sign_in_after_unlocking","doc":"Whether or not to sign in the user\nautomatically after a unlocking account.","summary":"<p>Whether or not to sign in the user automatically after a unlocking account.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L64","def":{"name":"sign_in_after_unlocking","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@sign_in_after_unlocking"}},{"id":"sign_in_after_unlocking=(sign_in_after_unlocking:Bool)-instance-method","html_id":"sign_in_after_unlocking=(sign_in_after_unlocking:Bool)-instance-method","name":"sign_in_after_unlocking=","doc":"Whether or not to sign in the user\nautomatically after a unlocking account.","summary":"<p>Whether or not to sign in the user automatically after a unlocking account.</p>","abstract":false,"args":[{"name":"sign_in_after_unlocking","doc":null,"default_value":"","external_name":"sign_in_after_unlocking","restriction":"Bool"}],"args_string":"(sign_in_after_unlocking : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L64","def":{"name":"sign_in_after_unlocking=","args":[{"name":"sign_in_after_unlocking","doc":null,"default_value":"","external_name":"sign_in_after_unlocking","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sign_in_after_unlocking = sign_in_after_unlocking"}},{"id":"unlock_in:Int32-instance-method","html_id":"unlock_in:Int32-instance-method","name":"unlock_in","doc":"Number of days until the account is automatically\nunlocked","summary":"<p>Number of days until the account is automatically unlocked</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L57","def":{"name":"unlock_in","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@unlock_in"}},{"id":"unlock_in=(unlock_in:Int32)-instance-method","html_id":"unlock_in=(unlock_in:Int32)-instance-method","name":"unlock_in=","doc":"Number of days until the account is automatically\nunlocked","summary":"<p>Number of days until the account is automatically unlocked</p>","abstract":false,"args":[{"name":"unlock_in","doc":null,"default_value":"","external_name":"unlock_in","restriction":"Int32"}],"args_string":"(unlock_in : Int32)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L57","def":{"name":"unlock_in=","args":[{"name":"unlock_in","doc":null,"default_value":"","external_name":"unlock_in","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unlock_in = unlock_in"}},{"id":"view_language:String-instance-method","html_id":"view_language:String-instance-method","name":"view_language","doc":"Set the view extension.\nUseful if you use slang or someother\ntemplating engine.\n\nDefault is `\"ecr\"`","summary":"<p>Set the view extension.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L18","def":{"name":"view_language","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@view_language"}},{"id":"view_language=(view_language:String)-instance-method","html_id":"view_language=(view_language:String)-instance-method","name":"view_language=","doc":"Set the view extension.\nUseful if you use slang or someother\ntemplating engine.\n\nDefault is `\"ecr\"`","summary":"<p>Set the view extension.</p>","abstract":false,"args":[{"name":"view_language","doc":null,"default_value":"","external_name":"view_language","restriction":"String"}],"args_string":"(view_language : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/configuration.cr#L18","def":{"name":"view_language=","args":[{"name":"view_language","doc":null,"default_value":"","external_name":"view_language","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@view_language = view_language"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","path":"Mochi/Controllers.html","kind":"module","full_name":"Mochi::Controllers","name":"Controllers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/application_controller.cr","line_number":7,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/application_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","path":"Mochi/Controllers/ApplicationController.html","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},"ancestors":[{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/application_controller.cr","line_number":7,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/application_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"LAYOUT","name":"LAYOUT","value":"\"application.ecr\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable/SessionController","kind":"class","full_name":"Mochi::Controllers::Authenticable::SessionController","name":"SessionController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable/UserController","kind":"class","full_name":"Mochi::Controllers::Authenticable::UserController","name":"UserController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Granite/RegistrationController","kind":"class","full_name":"Mochi::Controllers::Confirmable::Granite::RegistrationController","name":"RegistrationController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Jennifer/RegistrationController","kind":"class","full_name":"Mochi::Controllers::Confirmable::Jennifer::RegistrationController","name":"RegistrationController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Invitable/InvitableController","kind":"class","full_name":"Mochi::Controllers::Invitable::InvitableController","name":"InvitableController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Lockable/UnlockController","kind":"class","full_name":"Mochi::Controllers::Lockable::UnlockController","name":"UnlockController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Granite/SessionController","kind":"class","full_name":"Mochi::Controllers::Omniauthable::Granite::SessionController","name":"SessionController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Jennifer/SessionController","kind":"class","full_name":"Mochi::Controllers::Omniauthable::Jennifer::SessionController","name":"SessionController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/UserController","kind":"class","full_name":"Mochi::Controllers::Omniauthable::UserController","name":"UserController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Granite/PasswordController","kind":"class","full_name":"Mochi::Controllers::Recoverable::Granite::PasswordController","name":"PasswordController"},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Jennifer/PasswordController","kind":"class","full_name":"Mochi::Controllers::Recoverable::Jennifer::PasswordController","name":"PasswordController"}],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":"Main Controller for Amber. All other controller inherit from here.\nThis is a complete clone of ambers `ApplicationController` after generating\nthe auth template.","summary":"<p>Main Controller for Amber.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"current_user-instance-method","html_id":"current_user-instance-method","name":"current_user","doc":"Returns the current_user.","summary":"<p>Returns the current_user.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/application_controller.cr#L13","def":{"name":"current_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.current_user"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable","path":"Mochi/Controllers/Authenticable.html","kind":"module","full_name":"Mochi::Controllers::Authenticable","name":"Authenticable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/authenticable/session_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/session_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable/SessionController","path":"Mochi/Controllers/Authenticable/SessionController.html","kind":"class","full_name":"Mochi::Controllers::Authenticable::SessionController","name":"SessionController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/authenticable/session_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/session_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable","kind":"module","full_name":"Mochi::Controllers::Authenticable","name":"Authenticable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create(user)-instance-method","html_id":"create(user)-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/session_controller.cr#L8","def":{"name":"create","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if user\nelse\n  flash[:danger] = \"Invalid email or password\"\n  user = User.new\n  return render(\"session/new.ecr\")\nend\nif user.is_a?(Mochi::Models::Recoverable) && user.password_reset_in_progress\n  flash[:warning] = \"Please finish resetting your password\"\n  return render(\"session/new.ecr\")\nend\nif (user.is_a?(Mochi::Models::Confirmable) && (!user.confirmation_period_valid?)) && (!user.confirmed?)\n  flash[:warning] = \"Please activate your account\"\n  return render(\"session/new.ecr\")\nend\nif user.is_a?(Mochi::Models::Lockable) && (!user.valid_for_authentication?)\n  flash[:warning] = \"Your account is locked. Please unlock it before signing in\"\n  return render(\"session/new.ecr\")\nend\nif user.valid_password?(user_params[:password])\n  session[:user_id] = user.id\n  flash[:info] = \"Successfully logged in\"\n  if user.is_a?(Mochi::Models::Trackable)\n    user.update_tracked_fields!(request)\n  end\n  redirect_to(\"/\")\nelse\n  if user.is_a?(Mochi::Models::Lockable)\n    failed_sign_in(user)\n  end\n  flash[:danger] = \"Invalid email or password\"\n  render(\"session/new.ecr\")\nend\n"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/session_controller.cr#L46","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"session.delete(:user_id)\nflash[:info] = \"Logged out. See ya later!\"\nredirect_to(\"/\")\n"}},{"id":"new-instance-method","html_id":"new-instance-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/session_controller.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"render(\"session/new.ecr\")"}},{"id":"user-instance-method","html_id":"user-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/session_controller.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable/UserController","path":"Mochi/Controllers/Authenticable/UserController.html","kind":"class","full_name":"Mochi::Controllers::Authenticable::UserController","name":"UserController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/authenticable/user_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Authenticable","kind":"module","full_name":"Mochi::Controllers::Authenticable","name":"Authenticable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"before_filters:Nil-instance-method","html_id":"before_filters:Nil-instance-method","name":"before_filters","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L4","def":{"name":"before_filters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"filters.register(:before) do\nbegin\n    only([:show, :edit, :update, :destroy]) do\n      set_user\n    end\n  endend"}},{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L20","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.new(user_params.validate!)\nuser.password = params[:password]\nif user.valid? && user.save\n  session[:user_id] = user.id\n  redirect_to(\"/\", flash: {\"success\" => success_message(user)})\nelse\n  flash[:danger] = \"Could not create Resource!\"\n  render(\"user/new.ecr\")\nend\n"}},{"id":"destroy-instance-method","html_id":"destroy-instance-method","name":"destroy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L43","def":{"name":"destroy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user.destroy\nredirect_to(\"/\", flash: {\"success\" => \"User has been deleted.\"})\n"}},{"id":"edit-instance-method","html_id":"edit-instance-method","name":"edit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L16","def":{"name":"edit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"render(\"user/edit.ecr\")"}},{"id":"new-instance-method","html_id":"new-instance-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L12","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"render(\"user/new.ecr\")"}},{"id":"show-instance-method","html_id":"show-instance-method","name":"show","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L8","def":{"name":"show","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"render(\"user/show.ecr\")"}},{"id":"update-instance-method","html_id":"update-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L33","def":{"name":"update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user.set_attributes(user_params.validate!)\nif user.save\n  redirect_to(\"/\", flash: {\"success\" => \"User has been updated.\"})\nelse\n  flash[:danger] = \"Could not update User!\"\n  render(\"user/edit.ecr\")\nend\n"}},{"id":"user-instance-method","html_id":"user-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/authenticable/user_controller.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable","path":"Mochi/Controllers/Confirmable.html","kind":"module","full_name":"Mochi::Controllers::Confirmable","name":"Confirmable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/confirmable/granite/registration_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/granite/registration_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Granite","path":"Mochi/Controllers/Confirmable/Granite.html","kind":"module","full_name":"Mochi::Controllers::Confirmable::Granite","name":"Granite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/confirmable/granite/registration_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/granite/registration_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable","kind":"module","full_name":"Mochi::Controllers::Confirmable","name":"Confirmable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Granite/RegistrationController","path":"Mochi/Controllers/Confirmable/Granite/RegistrationController.html","kind":"class","full_name":"Mochi::Controllers::Confirmable::Granite::RegistrationController","name":"RegistrationController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/confirmable/granite/registration_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/granite/registration_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Granite","kind":"module","full_name":"Mochi::Controllers::Confirmable::Granite","name":"Granite"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"confirm-instance-method","html_id":"confirm-instance-method","name":"confirm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/granite/registration_controller.cr#L2","def":{"name":"confirm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.find_by(confirmation_token: params[:confirmation_token])\nif user.nil?\n  return redirect_to(\"/\", flash: {\"danger\" => \"Invalid authenticity token.\"})\nend\nif user.confirm! && user.save\n  redirect_to(\"/\", flash: {\"success\" => \"User has been confirmed.\"})\nelse\n  redirect_to(\"/\", flash: {\"error\" => \"Token has expired.\"})\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Jennifer","path":"Mochi/Controllers/Confirmable/Jennifer.html","kind":"module","full_name":"Mochi::Controllers::Confirmable::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/confirmable/jennifer/registration_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/jennifer/registration_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable","kind":"module","full_name":"Mochi::Controllers::Confirmable","name":"Confirmable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Jennifer/RegistrationController","path":"Mochi/Controllers/Confirmable/Jennifer/RegistrationController.html","kind":"class","full_name":"Mochi::Controllers::Confirmable::Jennifer::RegistrationController","name":"RegistrationController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/confirmable/jennifer/registration_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/jennifer/registration_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Confirmable/Jennifer","kind":"module","full_name":"Mochi::Controllers::Confirmable::Jennifer","name":"Jennifer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"confirm-instance-method","html_id":"confirm-instance-method","name":"confirm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/confirmable/jennifer/registration_controller.cr#L2","def":{"name":"confirm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.where do\n  _confirmation_token == params[:confirmation_token]\nend.first\nif user.nil?\n  return redirect_to(\"/\", flash: {\"error\" => \"Invalid authenticity token.\"})\nend\nif user.confirm! && user.save\n  redirect_to(\"/\", flash: {\"success\" => \"User has been confirmed.\"})\nelse\n  redirect_to(\"/\", flash: {\"error\" => \"Token has expired.\"})\nend\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Helpers","path":"Mochi/Controllers/Helpers.html","kind":"module","full_name":"Mochi::Controllers::Helpers","name":"Helpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/helpers/type_restrictions.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/helpers/type_restrictions.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Helpers/TypeRestrictions","path":"Mochi/Controllers/Helpers/TypeRestrictions.html","kind":"module","full_name":"Mochi::Controllers::Helpers::TypeRestrictions","name":"TypeRestrictions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/helpers/type_restrictions.cr","line_number":2,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/helpers/type_restrictions.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Helpers","kind":"module","full_name":"Mochi::Controllers::Helpers","name":"Helpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"confirmable?-macro","html_id":"confirmable?-macro","name":"confirmable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/helpers/type_restrictions.cr#L3","def":{"name":"confirmable?","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      user.is_a? Mochi::Models::Confirmable\n    "}},{"id":"lockable?-macro","html_id":"lockable?-macro","name":"lockable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/helpers/type_restrictions.cr#L7","def":{"name":"lockable?","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      user.is_a? Mochi::Models::Lockable\n    "}},{"id":"recoverable?-macro","html_id":"recoverable?-macro","name":"recoverable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/helpers/type_restrictions.cr#L11","def":{"name":"recoverable?","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      user.is_a? Mochi::Models::Recoverable\n    "}},{"id":"trackable?-macro","html_id":"trackable?-macro","name":"trackable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/helpers/type_restrictions.cr#L15","def":{"name":"trackable?","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      user.is_a? Mochi::Models::Trackable\n    "}}],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Invitable","path":"Mochi/Controllers/Invitable.html","kind":"module","full_name":"Mochi::Controllers::Invitable","name":"Invitable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/invitable_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Invitable/InvitableController","path":"Mochi/Controllers/Invitable/InvitableController.html","kind":"class","full_name":"Mochi::Controllers::Invitable::InvitableController","name":"InvitableController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/invitable_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Invitable","kind":"module","full_name":"Mochi::Controllers::Invitable","name":"Invitable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":"Used to create a new password recovery","summary":"<p>Used to create a new password recovery</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr#L16","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.new\nuser.email = params[:email]\nif cur_usr = current_user\n  invited_by = cur_usr.id\nend\nif user.invite!(invited_by)\n  redirect_to(\"/\", flash: {\"success\" => \"Invite successfully created & sent.\"})\nelse\n  flash[:danger] = \"Could not create new invite. Please try again.\"\n  render(\"invitable/new.ecr\")\nend\n"}},{"id":"edit(user)-instance-method","html_id":"edit(user)-instance-method","name":"edit","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr#L8","def":{"name":"edit","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if user\nelse\n  return redirect_to(\"/\", flash: {\"danger\" => \"Invalid authenticity token.\"})\nend\nrender(\"invitable/edit.ecr\")\n"}},{"id":"new-instance-method","html_id":"new-instance-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"render(\"invitable/new.ecr\")"}},{"id":"update(user)-instance-method","html_id":"update(user)-instance-method","name":"update","doc":"Used to confirm & reactive a user account","summary":"<p>Used to confirm & reactive a user account</p>","abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr#L33","def":{"name":"update","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if user\nelse\n  return redirect_to(\"/\", flash: {\"danger\" => \"Invalid.\"})\nend\nuser.password = params[:password]\nif user.accept_invitation!\n  redirect_to(\"/\", flash: {\"success\" => \"Invite accepted.\"})\nelse\n  flash[:danger] = \"Could accept invite. Please try again.\"\n  render(\"invitable/edit.ecr\")\nend\n"}},{"id":"user-instance-method","html_id":"user-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/invitable_controller.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Lockable","path":"Mochi/Controllers/Lockable.html","kind":"module","full_name":"Mochi::Controllers::Lockable","name":"Lockable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/lockable/unlock_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/lockable/unlock_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Lockable/UnlockController","path":"Mochi/Controllers/Lockable/UnlockController.html","kind":"class","full_name":"Mochi::Controllers::Lockable::UnlockController","name":"UnlockController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/lockable/unlock_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/lockable/unlock_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Lockable","kind":"module","full_name":"Mochi::Controllers::Lockable","name":"Lockable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"update(user)-instance-method","html_id":"update(user)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/lockable/unlock_controller.cr#L2","def":{"name":"update","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if user.nil?\n  return redirect_to(\"/\", flash: {\"error\" => \"Invalid authenticity token.\"})\nend\nif user.unlock_access!\n  if Mochi.configuration.sign_in_after_unlocking\n    session[:user_id] = user.id\n  end\n  redirect_to(\"/\", flash: {\"success\" => \"Account has been unlocked\"})\nelse\n  redirect_to(\"/\", flash: {\"error\" => \"Token has expired.\"})\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable","path":"Mochi/Controllers/Omniauthable.html","kind":"module","full_name":"Mochi::Controllers::Omniauthable","name":"Omniauthable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/omniauthable/user_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/user_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Granite","path":"Mochi/Controllers/Omniauthable/Granite.html","kind":"module","full_name":"Mochi::Controllers::Omniauthable::Granite","name":"Granite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/omniauthable/granite/session_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/granite/session_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable","kind":"module","full_name":"Mochi::Controllers::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Granite/SessionController","path":"Mochi/Controllers/Omniauthable/Granite/SessionController.html","kind":"class","full_name":"Mochi::Controllers::Omniauthable::Granite::SessionController","name":"SessionController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/omniauthable/granite/session_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/granite/session_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Granite","kind":"module","full_name":"Mochi::Controllers::Omniauthable::Granite","name":"Granite"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"callback-instance-method","html_id":"callback-instance-method","name":"callback","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/granite/session_controller.cr#L6","def":{"name":"callback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"url = \"#{Amber.settings.host}/omniauth/#{params[:provider]}/callback\"\nfakeuser = Mochi::Omniauthable::Provider.user(params[:provider], {\"code\" => params[:code]}, url)\nuser = User.find_by(uid: fakeuser.uid)\nif user\n  session[:user_id] = user.uid\n  flash[:info] = \"Successfully logged in\"\n  redirect_to(\"/\")\nelse\n  flash[:danger] = \"Invalid. It doesn't look like you have registered\"\n  redirect_to(\"/\")\nend\n"}},{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/granite/session_controller.cr#L2","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"redirect_to(Mochi::Omniauthable::Provider.authorize_uri(params[:provider], \"#{Amber.settings.host}/omniauth/#{params[:provider]}/callback\"))"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Jennifer","path":"Mochi/Controllers/Omniauthable/Jennifer.html","kind":"module","full_name":"Mochi::Controllers::Omniauthable::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/omniauthable/jennifer/session_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/jennifer/session_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable","kind":"module","full_name":"Mochi::Controllers::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Jennifer/SessionController","path":"Mochi/Controllers/Omniauthable/Jennifer/SessionController.html","kind":"class","full_name":"Mochi::Controllers::Omniauthable::Jennifer::SessionController","name":"SessionController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/omniauthable/jennifer/session_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/jennifer/session_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/Jennifer","kind":"module","full_name":"Mochi::Controllers::Omniauthable::Jennifer","name":"Jennifer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"callback-instance-method","html_id":"callback-instance-method","name":"callback","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/jennifer/session_controller.cr#L6","def":{"name":"callback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"url = \"#{Amber.settings.host}/omniauth/#{params[:provider]}/callback\"\nfakeuser = Mochi::Omniauthable::Provider.user(params[:provider], {\"code\" => params[:code]}, url)\nuser = User.where do\n  _uid == fakeuser.uid\nend.first\nif user\n  session[:user_id] = user.uid\n  flash[:info] = \"Successfully logged in\"\n  redirect_to(\"/\")\nelse\n  flash[:danger] = \"Invalid. It doesn't look like you have registered\"\n  redirect_to(\"/\")\nend\n"}},{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/jennifer/session_controller.cr#L2","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"redirect_to(Mochi::Omniauthable::Provider.authorize_uri(params[:provider], \"#{Amber.settings.host}/omniauth/#{params[:provider]}/callback\"))"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable/UserController","path":"Mochi/Controllers/Omniauthable/UserController.html","kind":"class","full_name":"Mochi::Controllers::Omniauthable::UserController","name":"UserController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/omniauthable/user_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/user_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Omniauthable","kind":"module","full_name":"Mochi::Controllers::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"callback-instance-method","html_id":"callback-instance-method","name":"callback","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/user_controller.cr#L6","def":{"name":"callback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"callback_url = \"#{Amber.settings.host}/omniauth/user/#{params[:provider]}/callback\"\nfakeuser = Mochi::Omniauthable::Provider.user(params[:provider], {\"code\" => params[:code]}, callback_url)\nuser = User.new(fakeuser)\nif user.save\n  session[:user_id] = user.uid\n  flash[:info] = \"Successfully logged in\"\n  redirect_to(\"/\")\nelse\n  flash[:danger] = \"Invalid email or password\"\n  redirect_to(\"/\")\nend\n"}},{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/omniauthable/user_controller.cr#L2","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"redirect_to(Mochi::Omniauthable::Provider.authorize_uri(params[:provider], \"#{Amber.settings.host}/omniauth/user/#{params[:provider]}/callback\"))"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable","path":"Mochi/Controllers/Recoverable.html","kind":"module","full_name":"Mochi::Controllers::Recoverable","name":"Recoverable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/recoverable/granite/password_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers","kind":"module","full_name":"Mochi::Controllers","name":"Controllers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Granite","path":"Mochi/Controllers/Recoverable/Granite.html","kind":"module","full_name":"Mochi::Controllers::Recoverable::Granite","name":"Granite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/recoverable/granite/password_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable","kind":"module","full_name":"Mochi::Controllers::Recoverable","name":"Recoverable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Granite/PasswordController","path":"Mochi/Controllers/Recoverable/Granite/PasswordController.html","kind":"class","full_name":"Mochi::Controllers::Recoverable::Granite::PasswordController","name":"PasswordController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/recoverable/granite/password_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Granite","kind":"module","full_name":"Mochi::Controllers::Recoverable::Granite","name":"Granite"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":"Used to create a new password recovery","summary":"<p>Used to create a new password recovery</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr#L10","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.find_by(email: recovery_params[\"email\"])\nif user\n  if (user.reset_password(recovery_params[\"new_password\"])) && user.send_reset_password_instructions\n    redirect_to(\"/\", flash: {\"success\" => \"Password reset. Please check your email\"})\n  else\n    flash[:danger] = \"Some error occurred. Please try again.\"\n    user = User.new\n    render(\"recovery/new.ecr\")\n  end\nelse\n  flash[:danger] = \"Could not find user with that email.\"\n  user = User.new\n  render(\"recovery/new.ecr\")\nend\n"}},{"id":"new-instance-method","html_id":"new-instance-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.new\nrender(\"recovery/new.ecr\")\n"}},{"id":"update-instance-method","html_id":"update-instance-method","name":"update","doc":"Used to confirm & reactive a user account","summary":"<p>Used to confirm & reactive a user account</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr#L28","def":{"name":"update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.find_by(reset_password_token: recovery_params.validate![\"reset_token\"].to_s)\nif user\nelse\n  user = User.new\n  return redirect_to(\"/reset/password\", flash: {\"danger\" => \"Invalid authenticity token.\"})\nend\nif (user.reset_password_by_token!(recovery_params[\"reset_token\"])) && user.errors.empty?\n  if Mochi.configuration.sign_in_after_reset_password\n    if user.is_a?(Mochi::Models::Trackable)\n      user.update_tracked_fields!(request)\n    end\n    session[:user_id] = user.id\n    redirect_to(\"/\", flash: {\"success\" => \"Successfully reset password.\"})\n  else\n    redirect_to(\"/\", flash: {\"success\" => \"Password has been reset. Please sign in.\"})\n  end\nelse\n  flash[:danger] = \"Invalid authenticity token.\"\n  render(\"recovery/new.ecr\")\nend\n"}},{"id":"user-instance-method","html_id":"user-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/granite/password_controller.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Jennifer","path":"Mochi/Controllers/Recoverable/Jennifer.html","kind":"module","full_name":"Mochi::Controllers::Recoverable::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/controllers/recoverable/jennifer/password_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/jennifer/password_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable","kind":"module","full_name":"Mochi::Controllers::Recoverable","name":"Recoverable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Jennifer/PasswordController","path":"Mochi/Controllers/Recoverable/Jennifer/PasswordController.html","kind":"class","full_name":"Mochi::Controllers::Recoverable::Jennifer::PasswordController","name":"PasswordController","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/ApplicationController","kind":"class","full_name":"Mochi::Controllers::ApplicationController","name":"ApplicationController"},{"html_id":"github.com/gitlato/mochi/JasperHelpers","kind":"module","full_name":"JasperHelpers","name":"JasperHelpers"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Links","kind":"module","full_name":"JasperHelpers::Links","name":"Links"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Forms","kind":"module","full_name":"JasperHelpers::Forms","name":"Forms"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Text","kind":"module","full_name":"JasperHelpers::Text","name":"Text"},{"html_id":"github.com/gitlato/mochi/JasperHelpers/Tags","kind":"module","full_name":"JasperHelpers::Tags","name":"Tags"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Base","kind":"class","full_name":"Amber::Controller::Base","name":"Base"},{"html_id":"github.com/gitlato/mochi/Amber/DSL/Callbacks","kind":"module","full_name":"Amber::DSL::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Callbacks","kind":"module","full_name":"Amber::Controller::Callbacks","name":"Callbacks"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/I18n","kind":"module","full_name":"Amber::Controller::Helpers::I18n","name":"I18n"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Route","kind":"module","full_name":"Amber::Controller::Helpers::Route","name":"Route"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Responders","kind":"module","full_name":"Amber::Controller::Helpers::Responders","name":"Responders"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Render","kind":"module","full_name":"Amber::Controller::Helpers::Render","name":"Render"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/Redirect","kind":"module","full_name":"Amber::Controller::Helpers::Redirect","name":"Redirect"},{"html_id":"github.com/gitlato/mochi/Amber/Controller/Helpers/CSRF","kind":"module","full_name":"Amber::Controller::Helpers::CSRF","name":"CSRF"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/controllers/recoverable/jennifer/password_controller.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/jennifer/password_controller.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Controllers/Recoverable/Jennifer","kind":"module","full_name":"Mochi::Controllers::Recoverable::Jennifer","name":"Jennifer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":"Used to create a new password recovery","summary":"<p>Used to create a new password recovery</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/jennifer/password_controller.cr#L9","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.where do\n  _email == recovery_params[\"email\"].to_s\nend.first\nif user\n  if (user.reset_password(recovery_params[\"new_password\"])) && user.send_reset_password_instructions\n    redirect_to(\"/\", flash: {\"success\" => \"Password reset. Please check your email\"})\n  else\n    flash[:danger] = \"Some error occurred. Please try again.\"\n    user = User.new\n    render(\"recovery/new.ecr\")\n  end\nelse\n  flash[:danger] = \"Could not find user with that email.\"\n  user = User.new\n  render(\"recovery/new.ecr\")\nend\n"}},{"id":"new-instance-method","html_id":"new-instance-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/jennifer/password_controller.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"render(\"recovery/new.ecr\")"}},{"id":"update-instance-method","html_id":"update-instance-method","name":"update","doc":"Used to confirm & reactive a user account","summary":"<p>Used to confirm & reactive a user account</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/jennifer/password_controller.cr#L27","def":{"name":"update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"user = User.where do\n  _reset_password_token == recovery_params[\"reset_token\"].to_s\nend.first\nif user\nelse\n  user = User.new\n  return redirect_to(\"/reset/password\", flash: {\"danger\" => \"Invalid authenticity token.\"})\nend\nif (user.reset_password_by_token!(recovery_params[\"reset_token\"])) && user.errors.empty?\n  if Mochi.configuration.sign_in_after_reset_password\n    if user.is_a?(Mochi::Models::Trackable)\n      user.update_tracked_fields!(request)\n    end\n    session[:user_id] = user.id\n    redirect_to(\"/\", flash: {\"success\" => \"Successfully reset password.\"})\n  else\n    redirect_to(\"/\", flash: {\"success\" => \"Password has been reset. Please sign in.\"})\n  end\nelse\n  flash[:danger] = \"Invalid authenticity token.\"\n  render(\"recovery/new.ecr\")\nend\n"}},{"id":"user-instance-method","html_id":"user-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/controllers/recoverable/jennifer/password_controller.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]}]}]}]},{"html_id":"github.com/gitlato/mochi/Mochi/DefaultMailer","path":"Mochi/DefaultMailer.html","kind":"class","full_name":"Mochi::DefaultMailer","name":"DefaultMailer","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Mailer","kind":"class","full_name":"Mochi::Mailer","name":"Mailer"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Mailer","kind":"class","full_name":"Mochi::Mailer","name":"Mailer"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/mailers/default_mailer.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/default_mailer.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"confirmation_instructions(record:User,token:String,*opts)-instance-method","html_id":"confirmation_instructions(record:User,token:String,*opts)-instance-method","name":"confirmation_instructions","doc":null,"summary":null,"abstract":false,"args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"args_string":"(record : User, token : String, *opts)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/default_mailer.cr#L4","def":{"name":"confirmation_instructions","args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(ConfirmationMailer.new((record.responds_to?(:name) ? record.name : \"friend\"), record.email, token)).deliver"}},{"id":"invitation_instructions(record:User,token:String,*opts)-instance-method","html_id":"invitation_instructions(record:User,token:String,*opts)-instance-method","name":"invitation_instructions","doc":null,"summary":null,"abstract":false,"args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"args_string":"(record : User, token : String, *opts)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/default_mailer.cr#L28","def":{"name":"invitation_instructions","args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(InviteMailer.new((record.responds_to?(:name) ? record.name : \"friend\"), record.email, token)).deliver"}},{"id":"reset_password_instructions(record:User,token:String,*opts)-instance-method","html_id":"reset_password_instructions(record:User,token:String,*opts)-instance-method","name":"reset_password_instructions","doc":null,"summary":null,"abstract":false,"args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"args_string":"(record : User, token : String, *opts)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/default_mailer.cr#L12","def":{"name":"reset_password_instructions","args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RecoveryMailer.new((record.responds_to?(:name) ? record.name : \"friend\"), record.email, token)).deliver"}},{"id":"unlock_instructions(record:User,token:String,*opts)-instance-method","html_id":"unlock_instructions(record:User,token:String,*opts)-instance-method","name":"unlock_instructions","doc":null,"summary":null,"abstract":false,"args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"args_string":"(record : User, token : String, *opts)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/default_mailer.cr#L20","def":{"name":"unlock_instructions","args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"User"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(UnlockMailer.new((record.responds_to?(:name) ? record.name : \"friend\"), record.email, token)).deliver"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Mailer","path":"Mochi/Mailer.html","kind":"class","full_name":"Mochi::Mailer","name":"Mailer","abstract":true,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/mailers/mochi_mailer.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/mochi_mailer.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/gitlato/mochi/Mochi/DefaultMailer","kind":"class","full_name":"Mochi::DefaultMailer","name":"DefaultMailer"}],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"confirmation_instructions-instance-method","html_id":"confirmation_instructions-instance-method","name":"confirmation_instructions","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/mochi_mailer.cr#L2","def":{"name":"confirmation_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"invitation_instructions-instance-method","html_id":"invitation_instructions-instance-method","name":"invitation_instructions","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/mochi_mailer.cr#L5","def":{"name":"invitation_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"reset_password_instructions-instance-method","html_id":"reset_password_instructions-instance-method","name":"reset_password_instructions","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/mochi_mailer.cr#L3","def":{"name":"reset_password_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"unlock_instructions-instance-method","html_id":"unlock_instructions-instance-method","name":"unlock_instructions","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/mailers/mochi_mailer.cr#L4","def":{"name":"unlock_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Models","path":"Mochi/Models.html","kind":"module","full_name":"Mochi::Models","name":"Models","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/validations/granite.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/granite.cr"},{"filename":"mochi/models/authenticable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr"},{"filename":"mochi/models/confirmable.cr","line_number":3,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr"},{"filename":"mochi/models/trackable.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/trackable.cr"},{"filename":"mochi/models/recoverable.cr","line_number":3,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr"},{"filename":"mochi/models/lockable.cr","line_number":4,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr"},{"filename":"mochi/models/invitable.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable","path":"Mochi/Models/Authenticable.html","kind":"module","full_name":"Mochi::Models::Authenticable","name":"Authenticable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/validations/granite.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/granite.cr"},{"filename":"mochi/models/authenticable.cr","line_number":7,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models","kind":"module","full_name":"Mochi::Models","name":"Models"},"doc":"Authenticatable Module, responsible for hashing the password and\nvalidating the authenticity of a user while signing in.","summary":"<p>Authenticatable Module, responsible for hashing the password and validating the authenticity of a user while signing in.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"password=(password:String)-instance-method","html_id":"password=(password:String)-instance-method","name":"password=","doc":"Generates a hashed password based on the given value.\nWe use `password_digest` to store the hashed password.","summary":"<p>Generates a hashed password based on the given value.</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(password : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr#L14","def":{"name":"password=","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@new_password = password\nself.password_digest = (Crypto::Bcrypt::Password.create(password, cost: 10)).to_s\n"}},{"id":"password_changed?-instance-method","html_id":"password_changed?-instance-method","name":"password_changed?","doc":"Checks if the records password has changed","summary":"<p>Checks if the records password has changed</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr#L24","def":{"name":"password_changed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_password ? true : false"}},{"id":"password_hash-instance-method","html_id":"password_hash-instance-method","name":"password_hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr#L19","def":{"name":"password_hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(hash = password_digest) ? Crypto::Bcrypt::Password.new(hash) : nil"}},{"id":"password_to_short?-instance-method","html_id":"password_to_short?-instance-method","name":"password_to_short?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr#L8","def":{"name":"password_to_short?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"password_changed? ? valid_password_size? : true"}},{"id":"valid_password?(password:String)-instance-method","html_id":"valid_password?(password:String)-instance-method","name":"valid_password?","doc":"Verifies whether a password (ie from sign in) is the user password.","summary":"<p>Verifies whether a password (ie from sign in) is the user password.</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(password : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr#L34","def":{"name":"valid_password?","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(bcrypt_pass = password_hash) ? bcrypt_pass.verify(password) : false"}},{"id":"valid_password_size?-instance-method","html_id":"valid_password_size?-instance-method","name":"valid_password_size?","doc":"Ensures the given password is atleast 6 characters","summary":"<p>Ensures the given password is atleast 6 characters</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/authenticable.cr#L29","def":{"name":"valid_password_size?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(pass = new_password) ? pass.size >= 6 : false"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable/Validations","path":"Mochi/Models/Authenticable/Validations.html","kind":"module","full_name":"Mochi::Models::Authenticable::Validations","name":"Validations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/validations/granite.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/granite.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable","kind":"module","full_name":"Mochi::Models::Authenticable","name":"Authenticable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable/Validations/Granite","path":"Mochi/Models/Authenticable/Validations/Granite.html","kind":"module","full_name":"Mochi::Models::Authenticable::Validations::Granite","name":"Granite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/validations/granite.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/granite.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable/Validations","kind":"module","full_name":"Mochi::Models::Authenticable::Validations","name":"Validations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"with_validations-macro","html_id":"with_validations-macro","name":"with_validations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/granite.cr#L2","def":{"name":"with_validations","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    validate :email, \"is required\", ->(user : User) do\n      (\nemail = user.email) ? !email.empty? : false\n    \nend\n\n    validate :email, \"already in use\", ->(user : User) do\n      \nexisting = User.find_by \nemail: user.email\n      !existing || \nexisting.id == user.id\n    \nend\n\n    validate :password, \"is too short\", ->(user : User) do\n      user.password_changed? ? user.valid_password_size? : true\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable/Validations/Jennifer","path":"Mochi/Models/Authenticable/Validations/Jennifer.html","kind":"module","full_name":"Mochi::Models::Authenticable::Validations::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/validations/jennifer.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/jennifer.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models/Authenticable/Validations","kind":"module","full_name":"Mochi::Models::Authenticable::Validations","name":"Validations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"jennifer_validations-macro","html_id":"jennifer_validations-macro","name":"jennifer_validations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/validations/jennifer.cr#L2","def":{"name":"jennifer_validations","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    validates_presence :email\n    validates_uniqueness :email\n    validates_length :new_password, in: 6..32, if: :password_changed?\n    validates_presence :password_digest, if: :password_changed?\n  "}}],"types":[]}]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Models/Confirmable","path":"Mochi/Models/Confirmable.html","kind":"module","full_name":"Mochi::Models::Confirmable","name":"Confirmable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/confirmable.cr","line_number":32,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models","kind":"module","full_name":"Mochi::Models","name":"Models"},"doc":"Confirmable is responsible to verify if an account is already confirmed to\nsign in, and to send emails with confirmation instructions.\nConfirmation instructions are sent to the user email after creating a\nrecord and when manually requested by a new confirmation instruction request.\n\nConfirmable tracks the following columns:\n\n* confirmation_token   - A unique random token\n* confirmed_at         - A timestamp when the user clicked the confirmation link\n* confirmation_sent_at - A timestamp when the confirmation_token was generated (not sent)\n* unconfirmed_email    - An email address copied from the email attr after confirmation. This value is copied to the email attr then cleared\n\n== Options\n\nConfirmable adds the following options to mochi:\n\n  * `allow_unconfirmed_access_for`: the time you want to allow the user to access their account before confirming it. After this period, the user access is denied. You can use this to let your user access some features of your application without confirming the account, but blocking it after a certain period (ie 7 days). By default `allow_unconfirmed_access_for` is zero, it means users always have to confirm to sign in.\n  * `reconfirmable`: requires any email changes to be confirmed (exactly the same way as initial account confirmation) to be applied. Requires additional unconfirmed_email db field to be set up (t.reconfirmable in migrations). Until confirmed, new email is stored in unconfirmed email column, and copied to email column on successful confirmation. Also, when used in conjunction with `send_email_changed_notification`, the notification is sent to the original email when the change is requested,  not when the unconfirmed email is confirmed.\n  * `confirm_within`: the time before a sent confirmation token becomes invalid. You can use this to force the user to confirm within a set period of time. Confirmable will not generate a new token if a repeat confirmation is requested during this time frame, unless the user's email changed too.\n\nExamples\n\n `User.find(1).confirm       # returns true unless it's already confirmed`\n\n `User.find(1).confirmed?    # true/false`\n\n `User.find(1).send_confirmation_instructions # manually send instructions`\n","summary":"<p>Confirmable is responsible to verify if an account is already confirmed to sign in, and to send emails with confirmation instructions.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"confirm-instance-method","html_id":"confirm-instance-method","name":"confirm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L75","def":{"name":"confirm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.confirmed = true\nself.confirmed_at = Time.utc\n"}},{"id":"confirm!-instance-method","html_id":"confirm!-instance-method","name":"confirm!","doc":"Confirm a user by setting it's confirmed_at to actual time. If the user\nis already confirmed, add an error to email field. If the user is invalid\nadd errors","summary":"<p>Confirm a user by setting it's confirmed_at to actual time.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L64","def":{"name":"confirm!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if confirmation_period_expired?\n  return false\nend\nconfirm()\nsave\n"}},{"id":"confirmation_period_valid?-instance-method","html_id":"confirmation_period_valid?-instance-method","name":"confirmation_period_valid?","doc":"Checks if the confirmation for the user is within the limit time.\nWe do this by calculating if the difference between today and the\nconfirmation sent date does not exceed the confirm in time configured.\nallow_unconfirmed_access_for is a model configuration, must always be an integer value.\n\nExample:\n\n  - `allow_unconfirmed_access_for = 1.day and confirmation_sent_at = today`\n\n    `confirmation_period_valid?   # returns true`\n\n  - `allow_unconfirmed_access_for = 5.days and confirmation_sent_at = 4.days.ago`\n\n    `confirmation_period_valid?   # returns true`\n\n  - `allow_unconfirmed_access_for = 5.days and confirmation_sent_at = 5.days.ago`\n\n    `confirmation_period_valid?   # returns false`\n\n  - `allow_unconfirmed_access_for = 0.days`\n\n    `confirmation_period_valid?   # will always return false`\n\n  - `allow_unconfirmed_access_for = nil`\n\n    `confirmation_period_valid?   # will always return true`\n","summary":"<p>Checks if the confirmation for the user is within the limit time.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L107","def":{"name":"confirmation_period_valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if Mochi.configuration.allow_unconfirmed_access_for.nil?\n  return true\nend\nif Mochi.configuration.allow_unconfirmed_access_for == 0.days\n  return false\nend\nallow_unconfirmed_access_for = Mochi.configuration.allow_unconfirmed_access_for\nif allow_unconfirmed_access_for\nelse\n  return false\nend\nsent_at = confirmation_sent_at\nif sent_at\nelse\n  return false\nend\nsent_at >= (Time.utc - allow_unconfirmed_access_for.days)\n"}},{"id":"confirmation_required?-instance-method","html_id":"confirmation_required?-instance-method","name":"confirmation_required?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L57","def":{"name":"confirmation_required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!confirmed?"}},{"id":"confirmed?-instance-method","html_id":"confirmed?-instance-method","name":"confirmed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L53","def":{"name":"confirmed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.confirmed"}},{"id":"generate_confirmation_token-instance-method","html_id":"generate_confirmation_token-instance-method","name":"generate_confirmation_token","doc":"Generates a new random token for confirmation, and stores\nthe time this token is being generated in confirmation_sent_at","summary":"<p>Generates a new random token for confirmation, and stores the time this token is being generated in confirmation_sent_at</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L45","def":{"name":"generate_confirmation_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.confirmation_token = UUID.random.to_s"}},{"id":"generate_confirmation_token!-instance-method","html_id":"generate_confirmation_token!-instance-method","name":"generate_confirmation_token!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L49","def":{"name":"generate_confirmation_token!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"generate_confirmation_token && save"}},{"id":"send_confirmation_instructions-instance-method","html_id":"send_confirmation_instructions-instance-method","name":"send_confirmation_instructions","doc":"Send confirmation email.\n\nMutating Method.\nExamples:\n\n  - `user.send_confirmation_instructions # returns true/false`\n","summary":"<p>Send confirmation email.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L149","def":{"name":"send_confirmation_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(mailer_class = Mochi.configuration.mailer_class) ? (if mailer_class\nelse\n  return\nend) : return\n(token = confirmation_token) ? (if token\nelse\n  return\nend) : return\nmailer_class.new.confirmation_instructions(self, token)\nself.confirmation_sent_at = Time.utc\nsave\n"}}],"macros":[{"id":"with_confirmation(skip_validation=false)-macro","html_id":"with_confirmation(skip_validation=false)-macro","name":"with_confirmation","doc":"Adds methods to set token & send confirmation email.\n- `before_create` - generates token and saves it to user;\n- `after_create` - sends out user email","summary":"<p>Adds methods to set token & send confirmation email.</p>","abstract":false,"args":[{"name":"skip_validation","doc":null,"default_value":"false","external_name":"skip_validation","restriction":""}],"args_string":"(skip_validation = <span class=\"n\">false</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/confirmable.cr#L36","def":{"name":"with_confirmation","args":[{"name":"skip_validation","doc":null,"default_value":"false","external_name":"skip_validation","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !skip_validation %}\n        before_create :generate_confirmation_token\n        after_create :send_confirmation_instructions\n      {% end %}\n\n    \n"}}],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Models/Invitable","path":"Mochi/Models/Invitable.html","kind":"module","full_name":"Mochi::Models::Invitable","name":"Invitable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/invitable.cr","line_number":22,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models","kind":"module","full_name":"Mochi::Models","name":"Models"},"doc":"Invitable is responsible for sending invitation emails.\nWhen an invitation is sent to an email address, an account is created for it.\nInvitation email contains a link allowing the user to accept the invitation\nby setting a password (as reset password from Devise's recoverable module).\n\nConfiguration:\n\n  accept_invitation_within: The period the generated invitation token is valid. After this period, the invited resource won't be able to accept the invitation. When accept_invitation_within is 0 (the default), the invitation won't expire.\n\nExamples:\n\n  `User.find(1).invited_to_sign_up?      # => true/false`\n\n  `User.invite!                          # => send invitation`\n\n  `User.accept_invitation!               # => accept invitation with a token`\n\n  `User.find(1).accept_invitation!       # => accept invitation`\n\n  `User.find(1).invite!                  # => reset invitation status and send invitation again`","summary":"<p>Invitable is responsible for sending invitation emails.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"accept_invitation-instance-method","html_id":"accept_invitation-instance-method","name":"accept_invitation","doc":"Accept an invitation by clearing invitation token and and setting invitation_accepted_at","summary":"<p>Accept an invitation by clearing invitation token and and setting invitation_accepted_at</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L28","def":{"name":"accept_invitation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@accepting_invitation = true\ntoken = self.invitation_token\nif token\nelse\n  return false\nend\n@invitation_token_was = token\nself.invitation_accepted_at = Time.utc\nself.invitation_token = nil\nif confirmation_required_for_invited? && self.is_a?(Mochi::Models::Confirmable)\n  self.confirmed_at = self.invitation_accepted_at\n  @confirmation_set = true\nelse\n  @confirmation_set = false\nend\n"}},{"id":"accept_invitation!-instance-method","html_id":"accept_invitation!-instance-method","name":"accept_invitation!","doc":"Accept an invitation by clearing invitation token and and setting invitation_accepted_at\nSaves the model and confirms it if model is confirmable, running invitation_accepted callbacks","summary":"<p>Accept an invitation by clearing invitation token and and setting invitation_accepted_at Saves the model and confirms it if model is confirmable, running invitation_accepted callbacks</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L47","def":{"name":"accept_invitation!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if valid_invitation?\n  self.accept_invitation\n  self.save\n  if persisted?\n  else\n    self.rollback_accepted_invitation\n  end\n  @accepting_invitation = false\n  true\nelse\n  false\nend"}},{"id":"accepted_or_not_invited?-instance-method","html_id":"accepted_or_not_invited?-instance-method","name":"accepted_or_not_invited?","doc":"Verifies whether a user has accepted an invitation (false when user is accepting it), or was never invited","summary":"<p>Verifies whether a user has accepted an invitation (false when user is accepting it), or was never invited</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L87","def":{"name":"accepted_or_not_invited?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"invitation_accepted? || (!invited_to_sign_up?)"}},{"id":"accepting_invitation:Bool-instance-method","html_id":"accepting_invitation:Bool-instance-method","name":"accepting_invitation","doc":"Returns true if `accept_invitation` was invoked","summary":"<p>Returns true if <code><a href=\"../../Mochi/Models/Invitable.html#accept_invitation-instance-method\">#accept_invitation</a></code> was invoked</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L24","def":{"name":"accepting_invitation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@accepting_invitation"}},{"id":"accepting_invitation=(accepting_invitation:Bool)-instance-method","html_id":"accepting_invitation=(accepting_invitation:Bool)-instance-method","name":"accepting_invitation=","doc":"Returns true if `accept_invitation` was invoked","summary":"<p>Returns true if <code><a href=\"../../Mochi/Models/Invitable.html#accept_invitation-instance-method\">#accept_invitation</a></code> was invoked</p>","abstract":false,"args":[{"name":"accepting_invitation","doc":null,"default_value":"","external_name":"accepting_invitation","restriction":"Bool"}],"args_string":"(accepting_invitation : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L24","def":{"name":"accepting_invitation=","args":[{"name":"accepting_invitation","doc":null,"default_value":"","external_name":"accepting_invitation","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@accepting_invitation = accepting_invitation"}},{"id":"accepting_invitation?-instance-method","html_id":"accepting_invitation?-instance-method","name":"accepting_invitation?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L72","def":{"name":"accepting_invitation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"accepting_invitation"}},{"id":"created_by_invite?-instance-method","html_id":"created_by_invite?-instance-method","name":"created_by_invite?","doc":"Verify wheather a user is created by invitation, irrespective to invitation status","summary":"<p>Verify wheather a user is created by invitation, irrespective to invitation status</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L68","def":{"name":"created_by_invite?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"invitation_created_at.present?"}},{"id":"invitation_accepted?-instance-method","html_id":"invitation_accepted?-instance-method","name":"invitation_accepted?","doc":"Verifies whether a user accepted an invitation (false when user is accepting it)","summary":"<p>Verifies whether a user accepted an invitation (false when user is accepting it)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L82","def":{"name":"invitation_accepted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(!accepting_invitation?) && invitation_accepted_at.present?"}},{"id":"invitation_due_at-instance-method","html_id":"invitation_due_at-instance-method","name":"invitation_due_at","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L131","def":{"name":"invitation_due_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (Mochi.configuration.accept_invitation_within == 0) || Mochi.configuration.accept_invitation_within.nil?\n  return nil\nend\ntime = self.invitation_created_at || self.invitation_sent_at\ntime + Mochi.configuration.accept_invitation_within\n"}},{"id":"invitation_taken?-instance-method","html_id":"invitation_taken?-instance-method","name":"invitation_taken?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L138","def":{"name":"invitation_taken?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!invited_to_sign_up?"}},{"id":"invitation_token_was:String-instance-method","html_id":"invitation_token_was:String-instance-method","name":"invitation_token_was","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L25","def":{"name":"invitation_token_was","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@invitation_token_was"}},{"id":"invitation_token_was=(invitation_token_was:String)-instance-method","html_id":"invitation_token_was=(invitation_token_was:String)-instance-method","name":"invitation_token_was=","doc":null,"summary":null,"abstract":false,"args":[{"name":"invitation_token_was","doc":null,"default_value":"","external_name":"invitation_token_was","restriction":"String"}],"args_string":"(invitation_token_was : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L25","def":{"name":"invitation_token_was=","args":[{"name":"invitation_token_was","doc":null,"default_value":"","external_name":"invitation_token_was","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@invitation_token_was = invitation_token_was"}},{"id":"invite!(invited_by=nil,skip_invitation=false)-instance-method","html_id":"invite!(invited_by=nil,skip_invitation=false)-instance-method","name":"invite!","doc":"Main method for inviting\nReset invitation token and send invitation again","summary":"<p>Main method for inviting Reset invitation token and send invitation again</p>","abstract":false,"args":[{"name":"invited_by","doc":null,"default_value":"nil","external_name":"invited_by","restriction":""},{"name":"skip_invitation","doc":null,"default_value":"false","external_name":"skip_invitation","restriction":""}],"args_string":"(invited_by = <span class=\"n\">nil</span>, skip_invitation = <span class=\"n\">false</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L93","def":{"name":"invite!","args":[{"name":"invited_by","doc":null,"default_value":"nil","external_name":"invited_by","restriction":""},{"name":"skip_invitation","doc":null,"default_value":"false","external_name":"skip_invitation","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.invitation_created_at = Time.utc\nif skip_invitation\nelse\n  self.invitation_sent_at = self.invitation_created_at\nend\nif invited_by\n  self.invited_by = invited_by\nend\nself.invitation_token = generate_invitation_token\nif save!\n  (  token = invitation_token) ? (  if token\n  else\n    return\n  end) : return\n  (  mailer_class = Mochi.configuration.mailer_class) ? (  if mailer_class\n  else\n    return\n  end) : return\n  if skip_invitation\n  else\n    mailer_class.new.invitation_instructions(self, token)\n  end\n  true\nelse\n  rollback_invitation\nend\n"}},{"id":"invited_to_sign_up?-instance-method","html_id":"invited_to_sign_up?-instance-method","name":"invited_to_sign_up?","doc":"Verifies whether a user has been invited or not","summary":"<p>Verifies whether a user has been invited or not</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L77","def":{"name":"invited_to_sign_up?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"accepting_invitation? || (persisted? && invitation_token)"}},{"id":"rollback_accepted_invitation-instance-method","html_id":"rollback_accepted_invitation-instance-method","name":"rollback_accepted_invitation","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L59","def":{"name":"rollback_accepted_invitation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.invitation_token = @invitation_token_was\nself.invitation_accepted_at = nil\nif @confirmation_set && self.is_a?(Mochi::Models::Confirmable)\n  self.confirmed_at = nil\nend\n"}},{"id":"rollback_invitation-instance-method","html_id":"rollback_invitation-instance-method","name":"rollback_invitation","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L113","def":{"name":"rollback_invitation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.invitation_token = nil\nself.invitation_created_at = nil\nself.invited_by = nil\nself.invitation_sent_at = nil\n"}},{"id":"valid_invitation?-instance-method","html_id":"valid_invitation?-instance-method","name":"valid_invitation?","doc":"Verify whether a invitation is active or not. If the user has been\ninvited, we need to calculate if the invitation time has not expired\nfor this user, in other words, if the invitation is still valid.","summary":"<p>Verify whether a invitation is active or not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/invitable.cr#L123","def":{"name":"valid_invitation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"invited_to_sign_up? && invitation_period_valid?"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Models/Lockable","path":"Mochi/Models/Lockable.html","kind":"module","full_name":"Mochi::Models::Lockable","name":"Lockable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/lockable.cr","line_number":20,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models","kind":"module","full_name":"Mochi::Models","name":"Models"},"doc":"Handles blocking a user access after a certain number of attempts.\nLockable accepts two different strategies to unlock a user after it's\nblocked: email and time. The former will send an email to the user when\nthe lock happens, containing a link to unlock its account. The second\nwill unlock the user automatically after some configured time (ie 2.hours).\nIt's also possible to set up lockable to use both email and time strategies.\n\nOptions\n\nLockable adds the following options to +devise+:\n\n  - `maximum_attempts`: how many attempts should be accepted before blocking the user.\n  - `unlock_in`: the time you want to lock the user after to lock happens. Only available when unlock_strategy is :time or :both.\n  - `last_attempt_warning`: The message users recieve when they are on their final login attempt - WIP\n","summary":"<p>Handles blocking a user access after a certain number of attempts.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"access_locked?-instance-method","html_id":"access_locked?-instance-method","name":"access_locked?","doc":"Verifies whether a user is locked or not.","summary":"<p>Verifies whether a user is locked or not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L43","def":{"name":"access_locked?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(!(!(locked_at))) && (!lock_expired?)"}},{"id":"attempts_exceeded?-instance-method","html_id":"attempts_exceeded?-instance-method","name":"attempts_exceeded?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L92","def":{"name":"attempts_exceeded?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.failed_attempts >= Mochi.configuration.maximum_attempts"}},{"id":"increment_failed_attempts!-instance-method","html_id":"increment_failed_attempts!-instance-method","name":"increment_failed_attempts!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L73","def":{"name":"increment_failed_attempts!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.failed_attempts = self.failed_attempts + 1\nsave\n"}},{"id":"last_attempt?-instance-method","html_id":"last_attempt?-instance-method","name":"last_attempt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L96","def":{"name":"last_attempt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.failed_attempts == (Mochi.configuration.maximum_attempts - 1)"}},{"id":"lock_access!(skip_email:Bool=false)-instance-method","html_id":"lock_access!(skip_email:Bool=false)-instance-method","name":"lock_access!","doc":"Lock a user setting its locked_at to actual time.\n  when you lock access, you could pass the\n  `skip_email: true` as an option.","summary":"<p>Lock a user setting its locked_at to actual time.</p>","abstract":false,"args":[{"name":"skip_email","doc":null,"default_value":"false","external_name":"skip_email","restriction":"Bool"}],"args_string":"(skip_email : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L24","def":{"name":"lock_access!","args":[{"name":"skip_email","doc":null,"default_value":"false","external_name":"skip_email","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.locked_at = Time.utc\nself.unlock_token = UUID.random.to_s\nif !skip_email\n  send_unlock_instructions\nend\nsave\n"}},{"id":"resend_unlock_instructions-instance-method","html_id":"resend_unlock_instructions-instance-method","name":"resend_unlock_instructions","doc":"Resend the unlock instructions if the user is locked.","summary":"<p>Resend the unlock instructions if the user is locked.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L57","def":{"name":"resend_unlock_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if_access_locked do\n  send_unlock_instructions\nend"}},{"id":"send_unlock_instructions-instance-method","html_id":"send_unlock_instructions-instance-method","name":"send_unlock_instructions","doc":"Send unlock instructions by email","summary":"<p>Send unlock instructions by email</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L48","def":{"name":"send_unlock_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(mailer_class = Mochi.configuration.mailer_class) ? (if mailer_class\nelse\n  return\nend) : return\n(token = self.unlock_token) ? (if token\nelse\n  return\nend) : return\nmailer_class.new.unlock_instructions(self, token)\n"}},{"id":"unlock_access!-instance-method","html_id":"unlock_access!-instance-method","name":"unlock_access!","doc":"Unlock a user by cleaning locked_at and failed_attempts.","summary":"<p>Unlock a user by cleaning locked_at and failed_attempts.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L35","def":{"name":"unlock_access!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.locked_at = nil\nself.failed_attempts = 0\nself.unlock_token = nil\nsave\n"}},{"id":"valid_for_authentication?-instance-method","html_id":"valid_for_authentication?-instance-method","name":"valid_for_authentication?","doc":"Overwrites valid_for_authentication? from Devise::Models::Authenticatable\nfor verifying whether a user is allowed to sign in or not. If the user\nis locked, it should never be allowed.","summary":"<p>Overwrites valid_for_authentication? from Devise::Models::Authenticatable for verifying whether a user is allowed to sign in or not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/lockable.cr#L64","def":{"name":"valid_for_authentication?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if lock_expired?\n  unlock_access!\nend\nif access_locked?\nelse\n  return true\nend\nfalse\n"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Models/Recoverable","path":"Mochi/Models/Recoverable.html","kind":"module","full_name":"Mochi::Models::Recoverable","name":"Recoverable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/recoverable.cr","line_number":21,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models","kind":"module","full_name":"Mochi::Models","name":"Models"},"doc":"Recoverable takes care of resetting the user password and send reset instructions.\n\nOptions\n\nRecoverable adds the following options:\n\n  * +reset_password_within+: the time period within which the password must be reset or the token expires.\n  * +sign_in_after_reset_password+: whether or not to sign in the user automatically after a password reset.\n\n== Examples\n\n  # resets the user password and save the record, true if valid passwords are given, otherwise false\n  User.find(1).reset_password('password123')\n\n  # creates a new token and send it with instructions about how to reset the password\n  User.find(1).send_reset_password_instructions\n","summary":"<p>Recoverable takes care of resetting the user password and send reset instructions.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_reset_password_token-instance-method","html_id":"clear_reset_password_token-instance-method","name":"clear_reset_password_token","doc":"Removes reset_password token","summary":"<p>Removes reset_password token</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L73","def":{"name":"clear_reset_password_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.reset_password_token = nil\nself.reset_password_sent_at = nil\nself.password_reset_in_progress = false\n"}},{"id":"reset_password(new_password:String)-instance-method","html_id":"reset_password(new_password:String)-instance-method","name":"reset_password","doc":"Update password saving the record and clearing token. Returns true if\nthe passwords are valid and the record was saved, false otherwise.","summary":"<p>Update password saving the record and clearing token.</p>","abstract":false,"args":[{"name":"new_password","doc":null,"default_value":"","external_name":"new_password","restriction":"String"}],"args_string":"(new_password : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L24","def":{"name":"reset_password","args":[{"name":"new_password","doc":null,"default_value":"","external_name":"new_password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !new_password.empty?\n  self.password = new_password\n  save\nelse\n  raise(\"Password is blank\")\nend"}},{"id":"reset_password_by_token!(token:String)-instance-method","html_id":"reset_password_by_token!(token:String)-instance-method","name":"reset_password_by_token!","doc":"If a users token is still valid, clear reset fields and automatically\ntry saving the record. If not user is found, returns a new user\ncontaining an error in reset_password_token attribute.\nAttributes must contain reset_password_token, password and confirmation","summary":"<p>If a users token is still valid, clear reset fields and automatically try saving the record.</p>","abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L100","def":{"name":"reset_password_by_token!","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.reset_password_token != token\n  return false\nend\nif self.password_reset_in_progress\nelse\n  return false\nend\nif !reset_password_period_valid?\n  return false\nend\nclear_reset_password_token()\nsave\n"}},{"id":"reset_password_period_valid?-instance-method","html_id":"reset_password_period_valid?-instance-method","name":"reset_password_period_valid?","doc":"Checks if the reset password token sent is within the limit time.\nWe do this by calculating if the difference between today and the\nsending date does not exceed the confirm in time configured.\nReturns true if the resource is not responding to reset_password_sent_at at all.\nreset_password_within is a model configuration, must always be an integer value.\n\nExample:\n\n  # reset_password_within = 1.day and reset_password_sent_at = today\n  reset_password_period_valid?   # returns true\n\n  # reset_password_within = 5.days and reset_password_sent_at = 4.days.ago\n  reset_password_period_valid?   # returns true\n\n  # reset_password_within = 5.days and reset_password_sent_at = 5.days.ago\n  reset_password_period_valid?   # returns false\n\n  # reset_password_within = 0.days\n  reset_password_period_valid?   # will always return false\n","summary":"<p>Checks if the reset password token sent is within the limit time.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L62","def":{"name":"reset_password_period_valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sent_at = reset_password_sent_at\nif sent_at\nelse\n  return false\nend\nreset_password_within = Mochi.configuration.reset_password_within\nif reset_password_within\nelse\n  return false\nend\nsent_at >= (Time.utc - reset_password_within.days)\n"}},{"id":"send_reset_password_instructions-instance-method","html_id":"send_reset_password_instructions-instance-method","name":"send_reset_password_instructions","doc":"Resets reset password token and send reset password instructions by email.\nReturns the token sent in the e-mail.","summary":"<p>Resets reset password token and send reset password instructions by email.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L35","def":{"name":"send_reset_password_instructions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = set_reset_password_token!\nsend_reset_password_instructions_notification()\ntoken\n"}},{"id":"send_reset_password_instructions_notification-instance-method","html_id":"send_reset_password_instructions_notification-instance-method","name":"send_reset_password_instructions_notification","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L88","def":{"name":"send_reset_password_instructions_notification","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(mailer_class = Mochi.configuration.mailer_class) ? (if mailer_class\nelse\n  return\nend) : return\n(token = reset_password_token) ? (if token\nelse\n  return\nend) : return\nmailer_class.new.reset_password_instructions(self, token)\n"}},{"id":"set_reset_password_token!-instance-method","html_id":"set_reset_password_token!-instance-method","name":"set_reset_password_token!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/recoverable.cr#L79","def":{"name":"set_reset_password_token!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.reset_password_token = UUID.random.to_s\nself.reset_password_sent_at = Time.utc\nself.password_reset_in_progress = true\nsave\nreset_password_token\n"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Models/Trackable","path":"Mochi/Models/Trackable.html","kind":"module","full_name":"Mochi::Models::Trackable","name":"Trackable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/trackable.cr","line_number":10,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/trackable.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Models","kind":"module","full_name":"Mochi::Models","name":"Models"},"doc":"Track information about your user sign in. It tracks the following columns:\n\n* sign_in_count      - Increased every time a sign in is made (by form, openid, oauth)\n* current_sign_in_at - A timestamp updated when the user signs in\n* last_sign_in_at    - Holds the timestamp of the previous sign in\n* current_sign_in_ip - The remote ip updated when the user sign in\n* last_sign_in_ip    - Holds the remote ip of the previous sign in\n","summary":"<p>Track information about your user sign in.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"update_tracked_fields(request)-instance-method","html_id":"update_tracked_fields(request)-instance-method","name":"update_tracked_fields","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"args_string":"(request)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/trackable.cr#L21","def":{"name":"update_tracked_fields","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"old_current, new_current = self.current_sign_in_at, Time.utc\nself.last_sign_in_at = old_current || new_current\nself.current_sign_in_at = new_current\nold_current, new_current = self.current_sign_in_ip, extract_ip_from(request)\nself.last_sign_in_ip = old_current || new_current\nself.current_sign_in_ip = new_current\nself.sign_in_count || (self.sign_in_count = 0)\nself.sign_in_count = self.sign_in_count + 1\n"}},{"id":"update_tracked_fields!(request)-instance-method","html_id":"update_tracked_fields!(request)-instance-method","name":"update_tracked_fields!","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"args_string":"(request)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/trackable.cr#L11","def":{"name":"update_tracked_fields!","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if new_record?\n  return\nend\nupdate_tracked_fields(request)\nself.save\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable","path":"Mochi/Omniauthable.html","kind":"module","full_name":"Mochi::Omniauthable","name":"Omniauthable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"mochi/models/omniauthable/configuration.cr","line_number":2,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr"},{"filename":"mochi/omniauth.cr","line_number":10,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/omniauth.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi","kind":"module","full_name":"Mochi","name":"Mochi"},"doc":null,"summary":null,"class_methods":[{"id":"config(provider,key,secret)-class-method","html_id":"config(provider,key,secret)-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":""}],"args_string":"(provider, key, secret)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L13","def":{"name":"config","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@configuration.providers[provider] = [key, secret]"}},{"id":"configuration-class-method","html_id":"configuration-class-method","name":"configuration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L9","def":{"name":"configuration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@configuration"}},{"id":"make(provider,redirect_uri)-class-method","html_id":"make(provider,redirect_uri)-class-method","name":"make","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":""}],"args_string":"(provider, redirect_uri)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L5","def":{"name":"make","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":""},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mochi::Omniauthable::Engine.new(provider, redirect_uri)"}},{"id":"setup(&)-class-method","html_id":"setup(&amp;)-class-method","name":"setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L17","def":{"name":"setup","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield @@configuration"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Configuration","path":"Mochi/Omniauthable/Configuration.html","kind":"class","full_name":"Mochi::Omniauthable::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/configuration.cr","line_number":21,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable","kind":"module","full_name":"Mochi::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L42","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"confirmable_enabled:Bool-instance-method","html_id":"confirmable_enabled:Bool-instance-method","name":"confirmable_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L25","def":{"name":"confirmable_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@confirmable_enabled"}},{"id":"confirmable_enabled=(confirmable_enabled:Bool)-instance-method","html_id":"confirmable_enabled=(confirmable_enabled:Bool)-instance-method","name":"confirmable_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"confirmable_enabled","doc":null,"default_value":"","external_name":"confirmable_enabled","restriction":"Bool"}],"args_string":"(confirmable_enabled : Bool)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L25","def":{"name":"confirmable_enabled=","args":[{"name":"confirmable_enabled","doc":null,"default_value":"","external_name":"confirmable_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@confirmable_enabled = confirmable_enabled"}},{"id":"facebook_id:String-instance-method","html_id":"facebook_id:String-instance-method","name":"facebook_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L30","def":{"name":"facebook_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@facebook_id"}},{"id":"facebook_id=(facebook_id:String)-instance-method","html_id":"facebook_id=(facebook_id:String)-instance-method","name":"facebook_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"facebook_id","doc":null,"default_value":"","external_name":"facebook_id","restriction":"String"}],"args_string":"(facebook_id : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L30","def":{"name":"facebook_id=","args":[{"name":"facebook_id","doc":null,"default_value":"","external_name":"facebook_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@facebook_id = facebook_id"}},{"id":"facebook_secret_key:String-instance-method","html_id":"facebook_secret_key:String-instance-method","name":"facebook_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L31","def":{"name":"facebook_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@facebook_secret_key"}},{"id":"facebook_secret_key=(facebook_secret_key:String)-instance-method","html_id":"facebook_secret_key=(facebook_secret_key:String)-instance-method","name":"facebook_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"facebook_secret_key","doc":null,"default_value":"","external_name":"facebook_secret_key","restriction":"String"}],"args_string":"(facebook_secret_key : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L31","def":{"name":"facebook_secret_key=","args":[{"name":"facebook_secret_key","doc":null,"default_value":"","external_name":"facebook_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@facebook_secret_key = facebook_secret_key"}},{"id":"github_id:String-instance-method","html_id":"github_id:String-instance-method","name":"github_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L33","def":{"name":"github_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@github_id"}},{"id":"github_id=(github_id:String)-instance-method","html_id":"github_id=(github_id:String)-instance-method","name":"github_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"github_id","doc":null,"default_value":"","external_name":"github_id","restriction":"String"}],"args_string":"(github_id : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L33","def":{"name":"github_id=","args":[{"name":"github_id","doc":null,"default_value":"","external_name":"github_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@github_id = github_id"}},{"id":"github_secret_key:String-instance-method","html_id":"github_secret_key:String-instance-method","name":"github_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L34","def":{"name":"github_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@github_secret_key"}},{"id":"github_secret_key=(github_secret_key:String)-instance-method","html_id":"github_secret_key=(github_secret_key:String)-instance-method","name":"github_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"github_secret_key","doc":null,"default_value":"","external_name":"github_secret_key","restriction":"String"}],"args_string":"(github_secret_key : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L34","def":{"name":"github_secret_key=","args":[{"name":"github_secret_key","doc":null,"default_value":"","external_name":"github_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@github_secret_key = github_secret_key"}},{"id":"google_id:String-instance-method","html_id":"google_id:String-instance-method","name":"google_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L27","def":{"name":"google_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@google_id"}},{"id":"google_id=(google_id:String)-instance-method","html_id":"google_id=(google_id:String)-instance-method","name":"google_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"google_id","doc":null,"default_value":"","external_name":"google_id","restriction":"String"}],"args_string":"(google_id : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L27","def":{"name":"google_id=","args":[{"name":"google_id","doc":null,"default_value":"","external_name":"google_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@google_id = google_id"}},{"id":"google_secret_key:String-instance-method","html_id":"google_secret_key:String-instance-method","name":"google_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L28","def":{"name":"google_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@google_secret_key"}},{"id":"google_secret_key=(google_secret_key:String)-instance-method","html_id":"google_secret_key=(google_secret_key:String)-instance-method","name":"google_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"google_secret_key","doc":null,"default_value":"","external_name":"google_secret_key","restriction":"String"}],"args_string":"(google_secret_key : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L28","def":{"name":"google_secret_key=","args":[{"name":"google_secret_key","doc":null,"default_value":"","external_name":"google_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@google_secret_key = google_secret_key"}},{"id":"keys(provider:String)-instance-method","html_id":"keys(provider:String)-instance-method","name":"keys","doc":"Returns the proper keys depending on the provider","summary":"<p>Returns the proper keys depending on the provider</p>","abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L47","def":{"name":"keys","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case provider\nwhen \"google\"\n  return {google_id, google_secret_key}\nwhen \"github\"\n  return {github_id, github_secret_key}\nwhen \"facebook\"\n  return {facebook_id, facebook_secret_key}\nwhen \"vk\"\n  return {vk_id, vk_secret_key}\nwhen \"twitter\"\n  return {twitter_id, twitter_secret_key}\nelse\n  raise(\"Provider #{provider} not implemented\")\nend"}},{"id":"providers:Hash(String,Array(String))-instance-method","html_id":"providers:Hash(String,Array(String))-instance-method","name":"providers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Array(String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L22","def":{"name":"providers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@providers"}},{"id":"providers=(providers)-instance-method","html_id":"providers=(providers)-instance-method","name":"providers=","doc":null,"summary":null,"abstract":false,"args":[{"name":"providers","doc":null,"default_value":"","external_name":"providers","restriction":""}],"args_string":"(providers)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L23","def":{"name":"providers=","args":[{"name":"providers","doc":null,"default_value":"","external_name":"providers","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@providers = providers"}},{"id":"twitter_id:String-instance-method","html_id":"twitter_id:String-instance-method","name":"twitter_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L36","def":{"name":"twitter_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@twitter_id"}},{"id":"twitter_id=(twitter_id:String)-instance-method","html_id":"twitter_id=(twitter_id:String)-instance-method","name":"twitter_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"twitter_id","doc":null,"default_value":"","external_name":"twitter_id","restriction":"String"}],"args_string":"(twitter_id : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L36","def":{"name":"twitter_id=","args":[{"name":"twitter_id","doc":null,"default_value":"","external_name":"twitter_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@twitter_id = twitter_id"}},{"id":"twitter_secret_key:String-instance-method","html_id":"twitter_secret_key:String-instance-method","name":"twitter_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L37","def":{"name":"twitter_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@twitter_secret_key"}},{"id":"twitter_secret_key=(twitter_secret_key:String)-instance-method","html_id":"twitter_secret_key=(twitter_secret_key:String)-instance-method","name":"twitter_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"twitter_secret_key","doc":null,"default_value":"","external_name":"twitter_secret_key","restriction":"String"}],"args_string":"(twitter_secret_key : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L37","def":{"name":"twitter_secret_key=","args":[{"name":"twitter_secret_key","doc":null,"default_value":"","external_name":"twitter_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@twitter_secret_key = twitter_secret_key"}},{"id":"vk_id:String-instance-method","html_id":"vk_id:String-instance-method","name":"vk_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L39","def":{"name":"vk_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@vk_id"}},{"id":"vk_id=(vk_id:String)-instance-method","html_id":"vk_id=(vk_id:String)-instance-method","name":"vk_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"vk_id","doc":null,"default_value":"","external_name":"vk_id","restriction":"String"}],"args_string":"(vk_id : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L39","def":{"name":"vk_id=","args":[{"name":"vk_id","doc":null,"default_value":"","external_name":"vk_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vk_id = vk_id"}},{"id":"vk_secret_key:String-instance-method","html_id":"vk_secret_key:String-instance-method","name":"vk_secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L40","def":{"name":"vk_secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@vk_secret_key"}},{"id":"vk_secret_key=(vk_secret_key:String)-instance-method","html_id":"vk_secret_key=(vk_secret_key:String)-instance-method","name":"vk_secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"vk_secret_key","doc":null,"default_value":"","external_name":"vk_secret_key","restriction":"String"}],"args_string":"(vk_secret_key : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/configuration.cr#L40","def":{"name":"vk_secret_key=","args":[{"name":"vk_secret_key","doc":null,"default_value":"","external_name":"vk_secret_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vk_secret_key = vk_secret_key"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Engine","path":"Mochi/Omniauthable/Engine.html","kind":"class","full_name":"Mochi::Omniauthable::Engine","name":"Engine","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/engine.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/engine.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable","kind":"module","full_name":"Mochi::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(provider:String,redirect_uri:String)-class-method","html_id":"new(provider:String,redirect_uri:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"}],"args_string":"(provider : String, redirect_uri : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/engine.cr#L2","def":{"name":"new","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(provider, redirect_uri)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/engine.cr#L20","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"provider.authorize_uri(scope)"}},{"id":"provider:Provider-instance-method","html_id":"provider:Provider-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Provider","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/engine.cr#L18","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Provider","visibility":"Public","body":"@provider"}},{"id":"user(params:Enumerable(::Tuple(String,String))):ReferenceUser-instance-method","html_id":"user(params:Enumerable(::Tuple(String,String))):ReferenceUser-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Enumerable(::Tuple(String, String))"}],"args_string":"(params : Enumerable(::Tuple(String, String))) : ReferenceUser","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/engine.cr#L24","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Enumerable(::Tuple(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReferenceUser","visibility":"Public","body":"provider.user(params.to_h)"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","path":"Mochi/Omniauthable/Provider.html","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider","abstract":true,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/provider.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Facebook","kind":"class","full_name":"Mochi::Omniauthable::Provider::Facebook","name":"Facebook"},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Github","kind":"class","full_name":"Mochi::Omniauthable::Provider::Github","name":"Github"},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Twitter","kind":"class","full_name":"Mochi::Omniauthable::Provider::Twitter","name":"Twitter"},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk","name":"Vk"}],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable","kind":"module","full_name":"Mochi::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[{"id":"authorize_uri(provider:String,url:String)-class-method","html_id":"authorize_uri(provider:String,url:String)-class-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(provider : String, url : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L12","def":{"name":"authorize_uri","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Mochi::Omniauthable.make(provider, url)).authorize_uri(scope: \"email\")"}},{"id":"user(provider:String,params:Hash(String,String),url:String)-class-method","html_id":"user(provider:String,params:Hash(String,String),url:String)-class-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(provider : String, params : Hash(String, String), url : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L16","def":{"name":"user","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Mochi::Omniauthable.make(provider, url)).user(params)"}}],"constructors":[{"id":"new(redirect_uri:String,key:String,secret:String)-class-method","html_id":"new(redirect_uri:String,key:String,secret:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"args_string":"(redirect_uri : String, key : String, secret : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L9","def":{"name":"new","args":[{"name":"redirect_uri","doc":null,"default_value":"","external_name":"redirect_uri","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(redirect_uri, key, secret)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":true,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L6","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L3","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key"}},{"id":"redirect_uri:String-instance-method","html_id":"redirect_uri:String-instance-method","name":"redirect_uri","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L2","def":{"name":"redirect_uri","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@redirect_uri"}},{"id":"secret:String-instance-method","html_id":"secret:String-instance-method","name":"secret","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L4","def":{"name":"secret","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@secret"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":true,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/provider.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Facebook","path":"Mochi/Omniauthable/Provider/Facebook.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Facebook","name":"Facebook","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/facebook.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope || (scope = \"email\")\nclient.get_authorize_uri(scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_fb_user(params[\"code\"])"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Facebook/FbUser","path":"Mochi/Omniauthable/Provider/Facebook/FbUser.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Facebook::FbUser","name":"FbUser","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/facebook.cr","line_number":11,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Facebook","kind":"class","full_name":"Mochi::Omniauthable::Provider::Facebook","name":"Facebook"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_137:JSON::PullParser)-class-method","html_id":"new(__temp_137:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_137","doc":null,"default_value":"","external_name":"__temp_137","restriction":"::JSON::PullParser"}],"args_string":"(__temp_137 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_137","doc":null,"default_value":"","external_name":"__temp_137","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_137)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"about:::Union(String,Nil)-instance-method","html_id":"about:::Union(String,Nil)-instance-method","name":"about","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"about","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@about"}},{"id":"about=(_about:::Union(String,Nil))-instance-method","html_id":"about=(_about:::Union(String,Nil))-instance-method","name":"about=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"args_string":"(_about : ::Union(String, Nil))","source_link":null,"def":{"name":"about=","args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@about = _about"}},{"id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","html_id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L13","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","html_id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L13","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L28","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.about"}},{"id":"email:String-instance-method","html_id":"email:String-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@email"}},{"id":"email=(_email:String)-instance-method","html_id":"email=(_email:String)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"args_string":"(_email : String)","source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"first_name:::Union(String,Nil)-instance-method","html_id":"first_name:::Union(String,Nil)-instance-method","name":"first_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"first_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@first_name"}},{"id":"first_name=(_first_name:::Union(String,Nil))-instance-method","html_id":"first_name=(_first_name:::Union(String,Nil))-instance-method","name":"first_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_first_name : ::Union(String, Nil))","source_link":null,"def":{"name":"first_name=","args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@first_name = _first_name"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L38","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.picture_url"}},{"id":"last_name:::Union(String,Nil)-instance-method","html_id":"last_name:::Union(String,Nil)-instance-method","name":"last_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"last_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@last_name"}},{"id":"last_name=(_last_name:::Union(String,Nil))-instance-method","html_id":"last_name=(_last_name:::Union(String,Nil))-instance-method","name":"last_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_last_name : ::Union(String, Nil))","source_link":null,"def":{"name":"last_name=","args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_name = _last_name"}},{"id":"location:::Union(String,Nil)-instance-method","html_id":"location:::Union(String,Nil)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@location"}},{"id":"location=(_location:::Union(String,Nil))-instance-method","html_id":"location=(_location:::Union(String,Nil))-instance-method","name":"location=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"args_string":"(_location : ::Union(String, Nil))","source_link":null,"def":{"name":"location=","args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@location = _location"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"picture_url:String?-instance-method","html_id":"picture_url:String?-instance-method","name":"picture_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L14","def":{"name":"picture_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@picture_url"}},{"id":"picture_url=(picture_url:String?)-instance-method","html_id":"picture_url=(picture_url:String?)-instance-method","name":"picture_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"picture_url","doc":null,"default_value":"","external_name":"picture_url","restriction":"String | ::Nil"}],"args_string":"(picture_url : String?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L14","def":{"name":"picture_url=","args":[{"name":"picture_url","doc":null,"default_value":"","external_name":"picture_url","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@picture_url = picture_url"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L15","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L15","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L12","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L12","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      _uid.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _last_name = @last_name\n  if _last_name.nil?\n  else\n    json.field(\"last_name\") do\n      _last_name.to_json(json)\n    end\n  end\n  _first_name = @first_name\n  if _first_name.nil?\n  else\n    json.field(\"first_name\") do\n      _first_name.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\n  _location = @location\n  if _location.nil?\n  else\n    json.field(\"location\") do\n      _location.to_json(json)\n    end\n  end\n  _about = @about\n  if _about.nil?\n  else\n    json.field(\"about\") do\n      _about.to_json(json)\n    end\n  end\n  _website = @website\n  if _website.nil?\n  else\n    json.field(\"website\") do\n      _website.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/facebook.cr#L32","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"urls = {} of String => String\nif self.website\n  urls[\"web\"] = self.website.as(String)\nend\nurls.empty? ? Nil : urls\n"}},{"id":"website:::Union(String,Nil)-instance-method","html_id":"website:::Union(String,Nil)-instance-method","name":"website","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"website","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@website"}},{"id":"website=(_website:::Union(String,Nil))-instance-method","html_id":"website=(_website:::Union(String,Nil))-instance-method","name":"website=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_website","doc":null,"default_value":"","external_name":"_website","restriction":"::Union(String, ::Nil)"}],"args_string":"(_website : ::Union(String, Nil))","source_link":null,"def":{"name":"website=","args":[{"name":"_website","doc":null,"default_value":"","external_name":"_website","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@website = _website"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Github","path":"Mochi/Omniauthable/Provider/Github.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Github","name":"Github","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/github.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope || (scope = \"user:email\")\nclient.get_authorize_uri(scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_gh_user(params[\"code\"])"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Github/GhUser","path":"Mochi/Omniauthable/Provider/Github/GhUser.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Github::GhUser","name":"GhUser","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/github.cr","line_number":11,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Github","kind":"class","full_name":"Mochi::Omniauthable::Provider::Github","name":"Github"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_156:JSON::PullParser)-class-method","html_id":"new(__temp_156:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_156","doc":null,"default_value":"","external_name":"__temp_156","restriction":"::JSON::PullParser"}],"args_string":"(__temp_156 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_156","doc":null,"default_value":"","external_name":"__temp_156","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_156)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","html_id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L13","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","html_id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L13","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"avatar_url:::Union(String,Nil)-instance-method","html_id":"avatar_url:::Union(String,Nil)-instance-method","name":"avatar_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"avatar_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@avatar_url"}},{"id":"avatar_url=(_avatar_url:::Union(String,Nil))-instance-method","html_id":"avatar_url=(_avatar_url:::Union(String,Nil))-instance-method","name":"avatar_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_avatar_url","doc":null,"default_value":"","external_name":"_avatar_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_avatar_url : ::Union(String, Nil))","source_link":null,"def":{"name":"avatar_url=","args":[{"name":"_avatar_url","doc":null,"default_value":"","external_name":"_avatar_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar_url = _avatar_url"}},{"id":"bio:::Union(String,Nil)-instance-method","html_id":"bio:::Union(String,Nil)-instance-method","name":"bio","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"bio","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@bio"}},{"id":"bio=(_bio:::Union(String,Nil))-instance-method","html_id":"bio=(_bio:::Union(String,Nil))-instance-method","name":"bio=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bio","doc":null,"default_value":"","external_name":"_bio","restriction":"::Union(String, ::Nil)"}],"args_string":"(_bio : ::Union(String, Nil))","source_link":null,"def":{"name":"bio=","args":[{"name":"_bio","doc":null,"default_value":"","external_name":"_bio","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bio = _bio"}},{"id":"blog:::Union(String,Nil)-instance-method","html_id":"blog:::Union(String,Nil)-instance-method","name":"blog","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"blog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@blog"}},{"id":"blog=(_blog:::Union(String,Nil))-instance-method","html_id":"blog=(_blog:::Union(String,Nil))-instance-method","name":"blog=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_blog","doc":null,"default_value":"","external_name":"_blog","restriction":"::Union(String, ::Nil)"}],"args_string":"(_blog : ::Union(String, Nil))","source_link":null,"def":{"name":"blog=","args":[{"name":"_blog","doc":null,"default_value":"","external_name":"_blog","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@blog = _blog"}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L32","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.bio"}},{"id":"email:String-instance-method","html_id":"email:String-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@email"}},{"id":"email=(_email:String)-instance-method","html_id":"email=(_email:String)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"args_string":"(_email : String)","source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"html_url:::Union(String,Nil)-instance-method","html_id":"html_url:::Union(String,Nil)-instance-method","name":"html_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"html_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@html_url"}},{"id":"html_url=(_html_url:::Union(String,Nil))-instance-method","html_id":"html_url=(_html_url:::Union(String,Nil))-instance-method","name":"html_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_html_url","doc":null,"default_value":"","external_name":"_html_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_html_url : ::Union(String, Nil))","source_link":null,"def":{"name":"html_url=","args":[{"name":"_html_url","doc":null,"default_value":"","external_name":"_html_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@html_url = _html_url"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L36","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.avatar_url"}},{"id":"location:::Union(String,Nil)-instance-method","html_id":"location:::Union(String,Nil)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@location"}},{"id":"location=(_location:::Union(String,Nil))-instance-method","html_id":"location=(_location:::Union(String,Nil))-instance-method","name":"location=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"args_string":"(_location : ::Union(String, Nil))","source_link":null,"def":{"name":"location=","args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@location = _location"}},{"id":"login:String-instance-method","html_id":"login:String-instance-method","name":"login","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"login","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@login"}},{"id":"login=(_login:String)-instance-method","html_id":"login=(_login:String)-instance-method","name":"login=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_login","doc":null,"default_value":"","external_name":"_login","restriction":"String"}],"args_string":"(_login : String)","source_link":null,"def":{"name":"login=","args":[{"name":"_login","doc":null,"default_value":"","external_name":"_login","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@login = _login"}},{"id":"name:::Union(String,Nil)-instance-method","html_id":"name:::Union(String,Nil)-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@name"}},{"id":"name=(_name:::Union(String,Nil))-instance-method","html_id":"name=(_name:::Union(String,Nil))-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_name : ::Union(String, Nil))","source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"nickname-instance-method","html_id":"nickname-instance-method","name":"nickname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L28","def":{"name":"nickname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.login"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L14","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L14","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L12","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L12","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      if _uid\n        String::RawConverter.to_json(_uid, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\n  _login = @login\n  if _login.nil?\n  else\n    json.field(\"login\") do\n      _login.to_json(json)\n    end\n  end\n  _location = @location\n  if _location.nil?\n  else\n    json.field(\"location\") do\n      _location.to_json(json)\n    end\n  end\n  _bio = @bio\n  if _bio.nil?\n  else\n    json.field(\"bio\") do\n      _bio.to_json(json)\n    end\n  end\n  _avatar_url = @avatar_url\n  if _avatar_url.nil?\n  else\n    json.field(\"avatar_url\") do\n      _avatar_url.to_json(json)\n    end\n  end\n  _blog = @blog\n  if _blog.nil?\n  else\n    json.field(\"blog\") do\n      _blog.to_json(json)\n    end\n  end\n  _html_url = @html_url\n  if _html_url.nil?\n  else\n    json.field(\"html_url\") do\n      _html_url.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/github.cr#L40","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"urls = {} of String => String\nif self.blog\n  urls[\"blog\"] = self.blog.as(String)\nend\nif self.html_url\n  urls[\"github\"] = self.html_url.as(String)\nend\nurls.empty? ? Nil : urls\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Twitter","path":"Mochi/Omniauthable/Provider/Twitter.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Twitter","name":"Twitter","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/twitter.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request_token = consumer.get_request_token(redirect_uri)\nconsumer.get_authorize_uri(request_token, redirect_uri)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_tw_user(params[\"oauth_token\"], params[\"oauth_verifier\"])"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Twitter/TwUser","path":"Mochi/Omniauthable/Provider/Twitter/TwUser.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Twitter::TwUser","name":"TwUser","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/twitter.cr","line_number":11,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Twitter","kind":"class","full_name":"Mochi::Omniauthable::Provider::Twitter","name":"Twitter"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_177:JSON::PullParser)-class-method","html_id":"new(__temp_177:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_177","doc":null,"default_value":"","external_name":"__temp_177","restriction":"::JSON::PullParser"}],"args_string":"(__temp_177 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_177","doc":null,"default_value":"","external_name":"__temp_177","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_177)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","html_id":"access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L13","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","html_id":"access_token=(access_token:OAuth::AccessToken|Nil|OAuth2::AccessToken|Nil)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth::AccessToken | Nil | OAuth2::AccessToken | Nil)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L13","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth::AccessToken | ::Nil | OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"description:::Union(String,Nil)-instance-method","html_id":"description:::Union(String,Nil)-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@description"}},{"id":"description=(_description:::Union(String,Nil))-instance-method","html_id":"description=(_description:::Union(String,Nil))-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"args_string":"(_description : ::Union(String, Nil))","source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"email:String-instance-method","html_id":"email:String-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@email"}},{"id":"email=(_email:String)-instance-method","html_id":"email=(_email:String)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"args_string":"(_email : String)","source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L31","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.profile_image_url"}},{"id":"location:::Union(String,Nil)-instance-method","html_id":"location:::Union(String,Nil)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@location"}},{"id":"location=(_location:::Union(String,Nil))-instance-method","html_id":"location=(_location:::Union(String,Nil))-instance-method","name":"location=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"args_string":"(_location : ::Union(String, Nil))","source_link":null,"def":{"name":"location=","args":[{"name":"_location","doc":null,"default_value":"","external_name":"_location","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@location = _location"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"nickname-instance-method","html_id":"nickname-instance-method","name":"nickname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L27","def":{"name":"nickname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.screen_name"}},{"id":"profile_image_url:::Union(String,Nil)-instance-method","html_id":"profile_image_url:::Union(String,Nil)-instance-method","name":"profile_image_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"profile_image_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@profile_image_url"}},{"id":"profile_image_url=(_profile_image_url:::Union(String,Nil))-instance-method","html_id":"profile_image_url=(_profile_image_url:::Union(String,Nil))-instance-method","name":"profile_image_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_profile_image_url","doc":null,"default_value":"","external_name":"_profile_image_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_profile_image_url : ::Union(String, Nil))","source_link":null,"def":{"name":"profile_image_url=","args":[{"name":"_profile_image_url","doc":null,"default_value":"","external_name":"_profile_image_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@profile_image_url = _profile_image_url"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L14","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L14","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L12","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L12","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"screen_name:String-instance-method","html_id":"screen_name:String-instance-method","name":"screen_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"screen_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@screen_name"}},{"id":"screen_name=(_screen_name:String)-instance-method","html_id":"screen_name=(_screen_name:String)-instance-method","name":"screen_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_screen_name","doc":null,"default_value":"","external_name":"_screen_name","restriction":"String"}],"args_string":"(_screen_name : String)","source_link":null,"def":{"name":"screen_name=","args":[{"name":"_screen_name","doc":null,"default_value":"","external_name":"_screen_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@screen_name = _screen_name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      if _uid\n        String::RawConverter.to_json(_uid, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _screen_name = @screen_name\n  if _screen_name.nil?\n  else\n    json.field(\"screen_name\") do\n      _screen_name.to_json(json)\n    end\n  end\n  _location = @location\n  if _location.nil?\n  else\n    json.field(\"location\") do\n      _location.to_json(json)\n    end\n  end\n  _description = @description\n  if _description.nil?\n  else\n    json.field(\"description\") do\n      _description.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _profile_image_url = @profile_image_url\n  if _profile_image_url.nil?\n  else\n    json.field(\"profile_image_url\") do\n      _profile_image_url.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"url:::Union(String,Nil)-instance-method","html_id":"url:::Union(String,Nil)-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/twitter.cr#L35","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"twitter\" => self.url}"}}],"macros":[],"types":[]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk","path":"Mochi/Omniauthable/Provider/Vk.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk","name":"Vk","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/vk.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider","kind":"class","full_name":"Mochi::Omniauthable::Provider","name":"Provider"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authorize_uri(scope=nil)-instance-method","html_id":"authorize_uri(scope=nil)-instance-method","name":"authorize_uri","doc":null,"summary":null,"abstract":false,"args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"args_string":"(scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L2","def":{"name":"authorize_uri","args":[{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@scope = \"email\"\nclient.get_authorize_uri(@scope)\n"}},{"id":"user(params:Hash(String,String))-instance-method","html_id":"user(params:Hash(String,String))-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String))","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L7","def":{"name":"user","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_vk_user(params[\"code\"])"}}],"macros":[],"types":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk/VkResponse","path":"Mochi/Omniauthable/Provider/Vk/VkResponse.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk::VkResponse","name":"VkResponse","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/vk.cr","line_number":71,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk","name":"Vk"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_226:JSON::PullParser)-class-method","html_id":"new(__temp_226:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_226","doc":null,"default_value":"","external_name":"__temp_226","restriction":"::JSON::PullParser"}],"args_string":"(__temp_226 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_226","doc":null,"default_value":"","external_name":"__temp_226","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_226)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"response:Array(VkUser)-instance-method","html_id":"response:Array(VkUser)-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(VkUser)","source_link":null,"def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(VkUser)","visibility":"Public","body":"@response"}},{"id":"response=(_response:Array(VkUser))-instance-method","html_id":"response=(_response:Array(VkUser))-instance-method","name":"response=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_response","doc":null,"default_value":"","external_name":"_response","restriction":"Array(VkUser)"}],"args_string":"(_response : Array(VkUser))","source_link":null,"def":{"name":"response=","args":[{"name":"_response","doc":null,"default_value":"","external_name":"_response","restriction":"Array(VkUser)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response = _response"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _response = @response\n  if _response.nil?\n  else\n    json.field(\"response\") do\n      _response.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk/VkTitle","path":"Mochi/Omniauthable/Provider/Vk/VkTitle.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk::VkTitle","name":"VkTitle","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/vk.cr","line_number":11,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk","name":"Vk"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_196:JSON::PullParser)-class-method","html_id":"new(__temp_196:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_196","doc":null,"default_value":"","external_name":"__temp_196","restriction":"::JSON::PullParser"}],"args_string":"(__temp_196 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_196","doc":null,"default_value":"","external_name":"__temp_196","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_196)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"title:String-instance-method","html_id":"title:String-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"title","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@title"}},{"id":"title=(_title:String)-instance-method","html_id":"title=(_title:String)-instance-method","name":"title=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"String"}],"args_string":"(_title : String)","source_link":null,"def":{"name":"title=","args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@title = _title"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _title = @title\n  if _title.nil?\n  else\n    json.field(\"title\") do\n      _title.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk/VkUser","path":"Mochi/Omniauthable/Provider/Vk/VkUser.html","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk::VkUser","name":"VkUser","abstract":false,"superclass":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser"},{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/providers/vk.cr","line_number":17,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk","name":"Vk"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_201:JSON::PullParser)-class-method","html_id":"new(__temp_201:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_201","doc":null,"default_value":"","external_name":"__temp_201","restriction":"::JSON::PullParser"}],"args_string":"(__temp_201 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_201","doc":null,"default_value":"","external_name":"__temp_201","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_201)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"about:::Union(String,Nil)-instance-method","html_id":"about:::Union(String,Nil)-instance-method","name":"about","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"about","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@about"}},{"id":"about=(_about:::Union(String,Nil))-instance-method","html_id":"about=(_about:::Union(String,Nil))-instance-method","name":"about=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"args_string":"(_about : ::Union(String, Nil))","source_link":null,"def":{"name":"about=","args":[{"name":"_about","doc":null,"default_value":"","external_name":"_about","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@about = _about"}},{"id":"access_token:OAuth2::AccessToken?-instance-method","html_id":"access_token:OAuth2::AccessToken?-instance-method","name":"access_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OAuth2::AccessToken?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L19","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OAuth2::AccessToken | ::Nil","visibility":"Public","body":"@access_token"}},{"id":"access_token=(access_token:OAuth2::AccessToken?)-instance-method","html_id":"access_token=(access_token:OAuth2::AccessToken?)-instance-method","name":"access_token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth2::AccessToken | ::Nil"}],"args_string":"(access_token : OAuth2::AccessToken?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L19","def":{"name":"access_token=","args":[{"name":"access_token","doc":null,"default_value":"","external_name":"access_token","restriction":"OAuth2::AccessToken | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@access_token = access_token"}},{"id":"city:::Union(VkTitle,Nil)-instance-method","html_id":"city:::Union(VkTitle,Nil)-instance-method","name":"city","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(VkTitle, Nil)","source_link":null,"def":{"name":"city","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(VkTitle, ::Nil)","visibility":"Public","body":"@city"}},{"id":"city=(_city:::Union(VkTitle,Nil))-instance-method","html_id":"city=(_city:::Union(VkTitle,Nil))-instance-method","name":"city=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_city","doc":null,"default_value":"","external_name":"_city","restriction":"::Union(VkTitle, ::Nil)"}],"args_string":"(_city : ::Union(VkTitle, Nil))","source_link":null,"def":{"name":"city=","args":[{"name":"_city","doc":null,"default_value":"","external_name":"_city","restriction":"::Union(VkTitle, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@city = _city"}},{"id":"country:::Union(VkTitle,Nil)-instance-method","html_id":"country:::Union(VkTitle,Nil)-instance-method","name":"country","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(VkTitle, Nil)","source_link":null,"def":{"name":"country","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(VkTitle, ::Nil)","visibility":"Public","body":"@country"}},{"id":"country=(_country:::Union(VkTitle,Nil))-instance-method","html_id":"country=(_country:::Union(VkTitle,Nil))-instance-method","name":"country=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_country","doc":null,"default_value":"","external_name":"_country","restriction":"::Union(VkTitle, ::Nil)"}],"args_string":"(_country : ::Union(VkTitle, Nil))","source_link":null,"def":{"name":"country=","args":[{"name":"_country","doc":null,"default_value":"","external_name":"_country","restriction":"::Union(VkTitle, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@country = _country"}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L45","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.about"}},{"id":"domain:::Union(String,Nil)-instance-method","html_id":"domain:::Union(String,Nil)-instance-method","name":"domain","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"domain","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@domain"}},{"id":"domain=(_domain:::Union(String,Nil))-instance-method","html_id":"domain=(_domain:::Union(String,Nil))-instance-method","name":"domain=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_domain","doc":null,"default_value":"","external_name":"_domain","restriction":"::Union(String, ::Nil)"}],"args_string":"(_domain : ::Union(String, Nil))","source_link":null,"def":{"name":"domain=","args":[{"name":"_domain","doc":null,"default_value":"","external_name":"_domain","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@domain = _domain"}},{"id":"email:String?-instance-method","html_id":"email:String?-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L21","def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@email"}},{"id":"email=(email:String?)-instance-method","html_id":"email=(email:String?)-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"email","doc":null,"default_value":"","external_name":"email","restriction":"String | ::Nil"}],"args_string":"(email : String?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L21","def":{"name":"email=","args":[{"name":"email","doc":null,"default_value":"","external_name":"email","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = email"}},{"id":"first_name:::Union(String,Nil)-instance-method","html_id":"first_name:::Union(String,Nil)-instance-method","name":"first_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"first_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@first_name"}},{"id":"first_name=(_first_name:::Union(String,Nil))-instance-method","html_id":"first_name=(_first_name:::Union(String,Nil))-instance-method","name":"first_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_first_name : ::Union(String, Nil))","source_link":null,"def":{"name":"first_name=","args":[{"name":"_first_name","doc":null,"default_value":"","external_name":"_first_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@first_name = _first_name"}},{"id":"home_phone:::Union(String,Nil)-instance-method","html_id":"home_phone:::Union(String,Nil)-instance-method","name":"home_phone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"home_phone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@home_phone"}},{"id":"home_phone=(_home_phone:::Union(String,Nil))-instance-method","html_id":"home_phone=(_home_phone:::Union(String,Nil))-instance-method","name":"home_phone=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_home_phone","doc":null,"default_value":"","external_name":"_home_phone","restriction":"::Union(String, ::Nil)"}],"args_string":"(_home_phone : ::Union(String, Nil))","source_link":null,"def":{"name":"home_phone=","args":[{"name":"_home_phone","doc":null,"default_value":"","external_name":"_home_phone","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@home_phone = _home_phone"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L49","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.photo_max_orig"}},{"id":"last_name:::Union(String,Nil)-instance-method","html_id":"last_name:::Union(String,Nil)-instance-method","name":"last_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"last_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@last_name"}},{"id":"last_name=(_last_name:::Union(String,Nil))-instance-method","html_id":"last_name=(_last_name:::Union(String,Nil))-instance-method","name":"last_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_last_name : ::Union(String, Nil))","source_link":null,"def":{"name":"last_name=","args":[{"name":"_last_name","doc":null,"default_value":"","external_name":"_last_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_name = _last_name"}},{"id":"location-instance-method","html_id":"location-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L57","def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"location = [] of String\nif self.city\n  location << self.city.not_nil!.title\nend\nif self.country\n  location << self.country.not_nil!.title\nend\nlocation.empty? ? Nil : location.join(\", \")\n"}},{"id":"mobile_phone:::Union(String,Nil)-instance-method","html_id":"mobile_phone:::Union(String,Nil)-instance-method","name":"mobile_phone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"mobile_phone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@mobile_phone"}},{"id":"mobile_phone=(_mobile_phone:::Union(String,Nil))-instance-method","html_id":"mobile_phone=(_mobile_phone:::Union(String,Nil))-instance-method","name":"mobile_phone=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mobile_phone","doc":null,"default_value":"","external_name":"_mobile_phone","restriction":"::Union(String, ::Nil)"}],"args_string":"(_mobile_phone : ::Union(String, Nil))","source_link":null,"def":{"name":"mobile_phone=","args":[{"name":"_mobile_phone","doc":null,"default_value":"","external_name":"_mobile_phone","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mobile_phone = _mobile_phone"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L41","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{first_name} #{last_name}\""}},{"id":"nickname-instance-method","html_id":"nickname-instance-method","name":"nickname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L37","def":{"name":"nickname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.domain"}},{"id":"phone-instance-method","html_id":"phone-instance-method","name":"phone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L53","def":{"name":"phone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.mobile_phone || self.home_phone"}},{"id":"photo_max_orig:::Union(String,Nil)-instance-method","html_id":"photo_max_orig:::Union(String,Nil)-instance-method","name":"photo_max_orig","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"photo_max_orig","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@photo_max_orig"}},{"id":"photo_max_orig=(_photo_max_orig:::Union(String,Nil))-instance-method","html_id":"photo_max_orig=(_photo_max_orig:::Union(String,Nil))-instance-method","name":"photo_max_orig=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_photo_max_orig","doc":null,"default_value":"","external_name":"_photo_max_orig","restriction":"::Union(String, ::Nil)"}],"args_string":"(_photo_max_orig : ::Union(String, Nil))","source_link":null,"def":{"name":"photo_max_orig=","args":[{"name":"_photo_max_orig","doc":null,"default_value":"","external_name":"_photo_max_orig","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@photo_max_orig = _photo_max_orig"}},{"id":"provider:String-instance-method","html_id":"provider:String-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L20","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@provider"}},{"id":"provider=(provider:String)-instance-method","html_id":"provider=(provider:String)-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"args_string":"(provider : String)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L20","def":{"name":"provider=","args":[{"name":"provider","doc":null,"default_value":"","external_name":"provider","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = provider"}},{"id":"raw_json:String?-instance-method","html_id":"raw_json:String?-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L18","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw_json"}},{"id":"raw_json=(raw_json:String?)-instance-method","html_id":"raw_json=(raw_json:String?)-instance-method","name":"raw_json=","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"args_string":"(raw_json : String?)","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L18","def":{"name":"raw_json=","args":[{"name":"raw_json","doc":null,"default_value":"","external_name":"raw_json","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_json = raw_json"}},{"id":"site:::Union(String,Nil)-instance-method","html_id":"site:::Union(String,Nil)-instance-method","name":"site","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"site","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@site"}},{"id":"site=(_site:::Union(String,Nil))-instance-method","html_id":"site=(_site:::Union(String,Nil))-instance-method","name":"site=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_site","doc":null,"default_value":"","external_name":"_site","restriction":"::Union(String, ::Nil)"}],"args_string":"(_site : ::Union(String, Nil))","source_link":null,"def":{"name":"site=","args":[{"name":"_site","doc":null,"default_value":"","external_name":"_site","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@site = _site"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _uid = @uid\n  if _uid.nil?\n  else\n    json.field(\"id\") do\n      if _uid\n        String::RawConverter.to_json(_uid, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _last_name = @last_name\n  if _last_name.nil?\n  else\n    json.field(\"last_name\") do\n      _last_name.to_json(json)\n    end\n  end\n  _first_name = @first_name\n  if _first_name.nil?\n  else\n    json.field(\"first_name\") do\n      _first_name.to_json(json)\n    end\n  end\n  _site = @site\n  if _site.nil?\n  else\n    json.field(\"site\") do\n      _site.to_json(json)\n    end\n  end\n  _city = @city\n  if _city.nil?\n  else\n    json.field(\"city\") do\n      _city.to_json(json)\n    end\n  end\n  _country = @country\n  if _country.nil?\n  else\n    json.field(\"country\") do\n      _country.to_json(json)\n    end\n  end\n  _domain = @domain\n  if _domain.nil?\n  else\n    json.field(\"domain\") do\n      _domain.to_json(json)\n    end\n  end\n  _about = @about\n  if _about.nil?\n  else\n    json.field(\"about\") do\n      _about.to_json(json)\n    end\n  end\n  _photo_max_orig = @photo_max_orig\n  if _photo_max_orig.nil?\n  else\n    json.field(\"photo_max_orig\") do\n      _photo_max_orig.to_json(json)\n    end\n  end\n  _mobile_phone = @mobile_phone\n  if _mobile_phone.nil?\n  else\n    json.field(\"mobile_phone\") do\n      _mobile_phone.to_json(json)\n    end\n  end\n  _home_phone = @home_phone\n  if _home_phone.nil?\n  else\n    json.field(\"home_phone\") do\n      _home_phone.to_json(json)\n    end\n  end\nend"}},{"id":"uid:String-instance-method","html_id":"uid:String-instance-method","name":"uid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@uid"}},{"id":"uid=(_uid:String)-instance-method","html_id":"uid=(_uid:String)-instance-method","name":"uid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"args_string":"(_uid : String)","source_link":null,"def":{"name":"uid=","args":[{"name":"_uid","doc":null,"default_value":"","external_name":"_uid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@uid = _uid"}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/providers/vk.cr#L64","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"urls = {} of String => String\nif self.site\n  urls[\"web\"] = self.site.not_nil!\nend\nurls.empty? ? Nil : urls\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/ReferenceUser","path":"Mochi/Omniauthable/ReferenceUser.html","kind":"class","full_name":"Mochi::Omniauthable::ReferenceUser","name":"ReferenceUser","abstract":true,"superclass":{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/gitlato/mochi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/gitlato/mochi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mochi/models/omniauthable/user.cr","line_number":1,"url":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr"}],"repository_name":"github.com/gitlato/mochi","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Facebook/FbUser","kind":"class","full_name":"Mochi::Omniauthable::Provider::Facebook::FbUser","name":"FbUser"},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Github/GhUser","kind":"class","full_name":"Mochi::Omniauthable::Provider::Github::GhUser","name":"GhUser"},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Twitter/TwUser","kind":"class","full_name":"Mochi::Omniauthable::Provider::Twitter::TwUser","name":"TwUser"},{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable/Provider/Vk/VkUser","kind":"class","full_name":"Mochi::Omniauthable::Provider::Vk::VkUser","name":"VkUser"}],"including_types":[],"namespace":{"html_id":"github.com/gitlato/mochi/Mochi/Omniauthable","kind":"module","full_name":"Mochi::Omniauthable","name":"Omniauthable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"access_token-instance-method","html_id":"access_token-instance-method","name":"access_token","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L7","def":{"name":"access_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"description-instance-method","html_id":"description-instance-method","name":"description","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L8","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"email-instance-method","html_id":"email-instance-method","name":"email","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L3","def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L5","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"provider-instance-method","html_id":"provider-instance-method","name":"provider","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L4","def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"raw_json-instance-method","html_id":"raw_json-instance-method","name":"raw_json","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L6","def":{"name":"raw_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"uid-instance-method","html_id":"uid-instance-method","name":"uid","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L2","def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"urls-instance-method","html_id":"urls-instance-method","name":"urls","doc":"abstract def nickname\nabstract def image","summary":"<p>abstract def nickname abstract def image</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/gitlato/mochi/blob/855c544ad4ae804ccff9e4610b0ae46af684d1eb/src/mochi/models/omniauthable/user.cr#L11","def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]}]}]}})